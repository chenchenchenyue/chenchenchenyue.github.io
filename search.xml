<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title></title>
      <link href="/2020/04/17/%E7%AC%AC%E5%8D%81%E5%9B%9B%E7%AB%A0-%E6%A6%82%E7%8E%87%E5%9B%BE%E6%A8%A1%E5%9E%8B/"/>
      <url>/2020/04/17/%E7%AC%AC%E5%8D%81%E5%9B%9B%E7%AB%A0-%E6%A6%82%E7%8E%87%E5%9B%BE%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<hr><p>title: 第十四章 概率图模型<br>date: 2020-04-17 14:10:45<br>tags:</p><ul><li>西瓜书</li></ul><hr><h1 id="第十四章-概率图模型"><a href="#第十四章-概率图模型" class="headerlink" title="第十四章 概率图模型"></a>第十四章 概率图模型</h1><h2 id="一、隐马尔可夫模型（HMM）现在一般使用RNN"><a href="#一、隐马尔可夫模型（HMM）现在一般使用RNN" class="headerlink" title="一、隐马尔可夫模型（HMM）现在一般使用RNN"></a>一、隐马尔可夫模型（HMM）现在一般使用RNN</h2><h3 id="1-组成"><a href="#1-组成" class="headerlink" title="1.组成"></a>1.组成</h3><h5 id="·状态变量：通常是隐藏的，不可被观测到的。-y1，y2，…yn-，yi表示第i时刻的系统状态。在隐马尔可夫模型中，系统通常在多个状态-s1，s2，s3…sN-之间转换，yi的取值范围为N个可能值的离散空间"><a href="#·状态变量：通常是隐藏的，不可被观测到的。-y1，y2，…yn-，yi表示第i时刻的系统状态。在隐马尔可夫模型中，系统通常在多个状态-s1，s2，s3…sN-之间转换，yi的取值范围为N个可能值的离散空间" class="headerlink" title="·状态变量：通常是隐藏的，不可被观测到的。{y1，y2，…yn}，yi表示第i时刻的系统状态。在隐马尔可夫模型中，系统通常在多个状态({s1，s2，s3…sN})之间转换，yi的取值范围为N个可能值的离散空间"></a>·状态变量：通常是隐藏的，不可被观测到的。{y1，y2，…yn}，yi表示第i时刻的系统状态。在隐马尔可夫模型中，系统通常在多个状态({s1，s2，s3…sN})之间转换，yi的取值范围为N个可能值的离散空间</h5><h5 id="·观测变量：-x1，x2，…xn-，xi表示第i时刻的观测值，xi的取值可以是连续的，也可以是离散的，为了方便讨论，仅考虑离散型观测变量"><a href="#·观测变量：-x1，x2，…xn-，xi表示第i时刻的观测值，xi的取值可以是连续的，也可以是离散的，为了方便讨论，仅考虑离散型观测变量" class="headerlink" title="·观测变量：{x1，x2，…xn}，xi表示第i时刻的观测值，xi的取值可以是连续的，也可以是离散的，为了方便讨论，仅考虑离散型观测变量"></a>·观测变量：{x1，x2，…xn}，xi表示第i时刻的观测值，xi的取值可以是连续的，也可以是离散的，为了方便讨论，仅考虑离散型观测变量</h5><p>方便理解：讲稿子，状态变量看做广播员的稿子内容，观测变量是听众的接受值</p><h3 id="2-如图"><a href="#2-如图" class="headerlink" title="2.如图"></a>2.如图</h3><figure class="image-box">                <img src="http://chen.cypeng.cn/202004171.png" alt="http://chen.cypeng.cn/202004171.png" title="" class="">                <p>http://chen.cypeng.cn/202004171.png</p>            </figure><p>观测变量的值仅依赖状态变量</p><p>t时刻的状态yt仅依赖t-1时刻的y(t-1),与此前t-2个状态无关</p><h5 id="马尔可夫链：（默认为1阶马尔可夫链）系统下一时刻的状态仅由当前状态决定，不依赖于以往的任何状态"><a href="#马尔可夫链：（默认为1阶马尔可夫链）系统下一时刻的状态仅由当前状态决定，不依赖于以往的任何状态" class="headerlink" title="马尔可夫链：（默认为1阶马尔可夫链）系统下一时刻的状态仅由当前状态决定，不依赖于以往的任何状态"></a>马尔可夫链：（默认为1阶马尔可夫链）系统下一时刻的状态仅由当前状态决定，不依赖于以往的任何状态</h5><h3 id="3-基本问题和应用"><a href="#3-基本问题和应用" class="headerlink" title="3.基本问题和应用"></a>3.基本问题和应用</h3><figure class="image-box">                <img src="http://chen.cypeng.cn/202004181.png" alt="" title="" class="">                <p></p>            </figure>]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>部署Django项目</title>
      <link href="/2020/03/22/%E9%83%A8%E7%BD%B2Django%E9%A1%B9%E7%9B%AE/"/>
      <url>/2020/03/22/%E9%83%A8%E7%BD%B2Django%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="部署Django项目"><a href="#部署Django项目" class="headerlink" title="部署Django项目"></a>部署Django项目</h1><h3 id="1-uwsgi部署"><a href="#1-uwsgi部署" class="headerlink" title="1.uwsgi部署"></a>1.uwsgi部署</h3><p>安装Django：pip install django    并没有像博客内一样出错，提前修改pip指向python3</p><p>安装uwsgi：pip install uwsgi</p><p>安装mysqlclient</p><h3 id="2-使用uwsgi运行"><a href="#2-使用uwsgi运行" class="headerlink" title="2.使用uwsgi运行"></a>2.使用uwsgi运行</h3><p>uwsgi –http :8000 –chdir /usr/local/zzzzpythonprojects/bisheDjango –wsgi-file bisheDjango/wsgi.py –master –processes 2 –threads 2 –stats 127.0.0.1:9191</p><p>参考链接：<a href="https://blog.csdn.net/qq_30501975/article/details/80423547" target="_blank" rel="noopener">参考博客，仅用参考，内部有错</a></p><h3 id="3-关闭进程"><a href="#3-关闭进程" class="headerlink" title="3.关闭进程"></a>3.关闭进程</h3><p>sudo fuser -k 8000/tcp        8000是端口号</p><h2 id="使用nlp模型，服务器报错"><a href="#使用nlp模型，服务器报错" class="headerlink" title="使用nlp模型，服务器报错"></a>使用nlp模型，服务器报错</h2><h5 id="1-ModuleNotFoundError-No-module-named-‘-bz2’"><a href="#1-ModuleNotFoundError-No-module-named-‘-bz2’" class="headerlink" title="1.ModuleNotFoundError: No module named ‘_bz2’"></a>1.ModuleNotFoundError: No module named ‘_bz2’</h5><p><a href="https://blog.csdn.net/heros_never_die/article/details/79942124" target="_blank" rel="noopener">https://blog.csdn.net/heros_never_die/article/details/79942124</a></p><h5 id="2-libbz2-so-1-0-cannot-open-shared-object-file"><a href="#2-libbz2-so-1-0-cannot-open-shared-object-file" class="headerlink" title="2. libbz2.so.1.0: cannot open shared object file"></a>2. libbz2.so.1.0: cannot open shared object file</h5><p><a href="https://blog.csdn.net/heros_never_die/article/details/79942124" target="_blank" rel="noopener">https://blog.csdn.net/heros_never_die/article/details/79942124</a></p><h5 id="3-遇到502错误-invalid-request-block-size-解决方法"><a href="#3-遇到502错误-invalid-request-block-size-解决方法" class="headerlink" title="3.遇到502错误,invalid request block size 解决方法"></a>3.遇到502错误,invalid request block size 解决方法</h5><p><a href="https://blog.csdn.net/weixin_34112208/article/details/93235749?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">https://blog.csdn.net/weixin_34112208/article/details/93235749?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task</a></p><p>接受参数长度过大，可以设置</p><p>uwsgi –http :8000 –chdir /usr/local/zzzzpythonprojects/bisheDjango –wsgi-file bisheDjango/wsgi.py –master –processes 2 –buffer-size 32768 –threads 2 –stats 127.0.0.1:9191</p>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>VUE音乐播放组件</title>
      <link href="/2020/03/05/VUE%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E7%BB%84%E4%BB%B6/"/>
      <url>/2020/03/05/VUE%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E7%BB%84%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="VUE音乐播放组件"><a href="#VUE音乐播放组件" class="headerlink" title="VUE音乐播放组件"></a>VUE音乐播放组件</h1><p><a href="https://segmentfault.com/a/1190000013029624" target="_blank" rel="noopener">参考文章</a>      <a href="https://github.com/SevenOutman/vue-aplayer/blob/develop/docs/README.zh-CN.md" target="_blank" rel="noopener">参考</a>    <a href="https://github.com/SevenOutman/vue-aplayer/blob/develop/docs/README.zh-CN.md" target="_blank" rel="noopener">官方github，最新最详细</a></p><h2 id="1-报错"><a href="#1-报错" class="headerlink" title="1.报错"></a>1.报错</h2><p>[Vue-APlayer] NotAllowedError: play() failed because the user didn’t interact with the document first.</p><p>1.解决：去掉autoplay</p><p>2.解决 <a href="https://blog.csdn.net/jls/article/details/86527881" target="_blank" rel="noopener">https://blog.csdn.net/jls/article/details/86527881</a></p><p>​    第一步，在chrome浏览器中输入：chrome://flags/#autoplay-policy</p><p>​    第二步，在Autoplay policy中将Default改为No user gesture is required</p><h2 id="2-切歌自动播放"><a href="#2-切歌自动播放" class="headerlink" title="2.切歌自动播放"></a>2.切歌自动播放</h2><p>在组件上使用autoplay，一打开页面便可自动播放，但是切歌时还是会暂停。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">that.$parent.$refs.playsongs.music=&#123;</span><br><span class="line">src:row.fields.songplay,</span><br><span class="line">artist:row.fields.singername,</span><br><span class="line">title:row.fields.songname,</span><br><span class="line">pic:row.fields.songimage,</span><br><span class="line">lrc:row.fields.content,</span><br><span class="line">&#125;</span><br><span class="line">that.$parent.$refs.playsongs.$children[0].audio.autoplay=true</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue中echarts的使用</title>
      <link href="/2020/03/05/vue%E4%B8%ADecharts%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/03/05/vue%E4%B8%ADecharts%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="vue中echarts的使用"><a href="#vue中echarts的使用" class="headerlink" title="vue中echarts的使用"></a>vue中echarts的使用</h1><h3 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h3><p>npm install echarts -S</p><h3 id="2-main-js引用"><a href="#2-main-js引用" class="headerlink" title="2.main.js引用"></a>2.main.js引用</h3><p>import echarts from ‘echarts’<br>Vue.prototype.$echarts = echarts</p><h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h3><p><template><br>    <div id="analyse" style="width:500px;height:500px"><br>        陈陈陈错错错错<br>    </div><br></template></p><p><script><br>    export default {<br>        data() {<br>            return {</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div id=&quot;analyse&quot; style=&quot;width:500px;height:500px&quot;&gt;</span><br><span class="line">陈陈陈错错错错</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;,</span><br><span class="line">methods: &#123;</span><br><span class="line">//上传成功后触发</span><br><span class="line">initCharts() &#123;</span><br><span class="line">alert(&quot;ccc&quot;)</span><br><span class="line">11111111111重要   let myChart = this.$echarts.init(document.getElementById(&quot;analyse&quot;));</span><br><span class="line">// 绘制图表</span><br><span class="line">var option = &#123;</span><br><span class="line">dataset: &#123;</span><br><span class="line">source: [</span><br><span class="line">[&apos;score&apos;, &apos;amount&apos;, &apos;product&apos;],</span><br><span class="line">[89.3, 89.3, &apos;Matcha Latte&apos;],</span><br><span class="line">[57.1, 57.1, &apos;Milk Tea&apos;],</span><br><span class="line">[74.4, 74.4, &apos;Cheese Cocoa&apos;],</span><br><span class="line">[50.1, 50.1, &apos;Cheese Brownie&apos;],</span><br><span class="line">[89.7, 89.7, &apos;Matcha Cocoa&apos;],</span><br><span class="line">[68.1, 68.1, &apos;Tea&apos;],</span><br><span class="line">[19.6, 19.6, &apos;Orange Juice&apos;],</span><br><span class="line">[10.6, 10.6, &apos;Lemon Juice&apos;],</span><br><span class="line">[32.7, 32.7, &apos;Walnut Brownie&apos;]</span><br><span class="line">]</span><br><span class="line">&#125;,</span><br><span class="line">grid: &#123;</span><br><span class="line">containLabel: true</span><br><span class="line">&#125;,</span><br><span class="line">xAxis: &#123;</span><br><span class="line">name: &apos;amount&apos;</span><br><span class="line">&#125;,</span><br><span class="line">yAxis: &#123;</span><br><span class="line">type: &apos;category&apos;</span><br><span class="line">&#125;,</span><br><span class="line">visualMap: &#123;</span><br><span class="line">orient: &apos;horizontal&apos;,</span><br><span class="line">left: &apos;center&apos;,</span><br><span class="line">min: 10,</span><br><span class="line">max: 100,</span><br><span class="line">text: [&apos;High Score&apos;, &apos;Low Score&apos;],</span><br><span class="line">// Map the score column to color</span><br><span class="line">dimension: 0,</span><br><span class="line">inRange: &#123;</span><br><span class="line">color: [&apos;#D7DA8B&apos;, &apos;#E15457&apos;]</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">series: [&#123;</span><br><span class="line">type: &apos;bar&apos;,</span><br><span class="line">encode: &#123;</span><br><span class="line">// Map the &quot;amount&quot; column to X axis.</span><br><span class="line">x: &apos;amount&apos;,</span><br><span class="line">// Map the &quot;product&quot; column to Y axis</span><br><span class="line">y: &apos;product&apos;</span><br><span class="line">&#125;</span><br><span class="line">&#125;]</span><br><span class="line">&#125;;</span><br><span class="line">22222222重要myChart.setOption(option)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">mounted() &#123;</span><br><span class="line"></span><br><span class="line">this.initCharts();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></script></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>vue上手</title>
      <link href="/2020/03/05/vue%E4%B8%8A%E6%89%8B/"/>
      <url>/2020/03/05/vue%E4%B8%8A%E6%89%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="vue上手教程"><a href="#vue上手教程" class="headerlink" title="vue上手教程"></a>vue上手教程</h1><h2 id="src-assets下放静态文件-和-注意-相对路径常用-表示当前同级"><a href="#src-assets下放静态文件-和-注意-相对路径常用-表示当前同级" class="headerlink" title="src/assets下放静态文件   ./和../注意   相对路径常用./表示当前同级"></a>src/assets下放静态文件   ./和../注意   相对路径常用./表示当前同级</h2><p>vue中 methods中方法这样写    getdata:function(){}    可简写为getdata(){}</p><h3 id="1-格式"><a href="#1-格式" class="headerlink" title="1.格式"></a>1.格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">var example2 = new Vue(&#123;</span><br><span class="line">  el: &apos;#example-2&apos;,</span><br><span class="line">  data: &#123;</span><br><span class="line">    name: &apos;Vue.js&apos;</span><br><span class="line">  &#125;,</span><br><span class="line">  // 在 `methods` 对象中定义方法</span><br><span class="line">  methods: &#123;</span><br><span class="line">    greet: function (event) &#123;</span><br><span class="line">      // `this` 在方法里指向当前 Vue 实例</span><br><span class="line">      alert(&apos;Hello &apos; + this.name + &apos;!&apos;)</span><br><span class="line">      // `event` 是原生 DOM 事件</span><br><span class="line">      if (event) &#123;</span><br><span class="line">        alert(event.target.tagName)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>this.name在methods里能直接拿到数据，this表示当前实例，也可以this.data.name</p><p>this.name=xxx  能对data内的属性值进行赋值，但是不能this.name[0]类似于这样对数组某一值赋值，可以通过，this.name.splice(起始位置，删除个数(为0，表示不删除，新增元素。。。))实现替换</p><h3 id="2-computed计算属性"><a href="#2-computed计算属性" class="headerlink" title="2.computed计算属性"></a>2.computed计算属性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    // 计算属性的 getter</span><br><span class="line">    reversedMessage: function () &#123;</span><br><span class="line">      // `this` 指向 vm 实例</span><br><span class="line">      return this.message.split(&apos;&apos;).reverse().join(&apos;&apos;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>与data和methods同级，reversedMessage就是属性值，引用时和data内属性同样方法，在页面内引用。</p><h3 id="3-绑定"><a href="#3-绑定" class="headerlink" title="3.绑定"></a>3.绑定</h3><p>v-bind:     绑定属性   简写为:</p><p>v-on:         绑定事件   简写为@</p><h3 id="4-组件"><a href="#4-组件" class="headerlink" title="4.组件"></a>4.组件</h3><h4 id="这是全局注册组件"><a href="#这是全局注册组件" class="headerlink" title="这是全局注册组件"></a>这是全局注册组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;button-counter&apos;, &#123;</span><br><span class="line">  data: function () &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      count: 0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  template: &apos;&lt;button v-on:click=&quot;count++&quot;&gt;You clicked me &#123;&#123; count &#125;&#125; times.&lt;/button&gt;&apos;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="，’button-counter’是组件名，data注意和vue实例不一样，这里data对应的是个函数，-return值。template模板是引用时的显示内容"><a href="#，’button-counter’是组件名，data注意和vue实例不一样，这里data对应的是个函数，-return值。template模板是引用时的显示内容" class="headerlink" title="，’button-counter’是组件名，data注意和vue实例不一样，这里data对应的是个函数， return值。template模板是引用时的显示内容"></a>，’button-counter’是组件名，data注意和vue实例不一样，这里data对应的是个函数， return值。template模板是引用时的显示内容</h5><h5 id="引用时："><a href="#引用时：" class="headerlink" title="引用时："></a>引用时：</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;components-demo&quot;&gt;</span><br><span class="line">  &lt;button-counter&gt;&lt;/button-counter&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">new Vue(&#123; el: &apos;#components-demo&apos; &#125;)</span><br></pre></td></tr></table></figure><h4 id="这是局部注册组件"><a href="#这是局部注册组件" class="headerlink" title="这是局部注册组件"></a>这是局部注册组件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var ComponentA = &#123; /* ... */ &#125;</span><br><span class="line">var ComponentB = &#123; /* ... */ &#125;</span><br><span class="line">var ComponentC = &#123; /* ... */ &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  components: &#123;</span><br><span class="line">    &apos;component-a&apos;: ComponentA,</span><br><span class="line">    &apos;component-b&apos;: ComponentB</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>注意<strong>局部注册的组件在其子组件中不可用</strong>。例如，如果你希望 <code>ComponentA</code> 在 <code>ComponentB</code> 中可用，则你需要这样写：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var ComponentA = &#123; /* ... */ &#125;</span><br><span class="line"></span><br><span class="line">var ComponentB = &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    &apos;component-a&apos;: ComponentA</span><br><span class="line">  &#125;,</span><br><span class="line">  // ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="CLI脚手架内"><a href="#CLI脚手架内" class="headerlink" title="CLI脚手架内"></a>CLI脚手架内</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">import BaseButton from &apos;./BaseButton.vue&apos;</span><br><span class="line">import BaseIcon from &apos;./BaseIcon.vue&apos;</span><br><span class="line">import BaseInput from &apos;./BaseInput.vue&apos;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    BaseButton,</span><br><span class="line">    BaseIcon,</span><br><span class="line">    BaseInput</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//使用</span><br><span class="line">&lt;BaseInput</span><br><span class="line">  v-model=&quot;searchText&quot;</span><br><span class="line">  @keydown.enter=&quot;search&quot;</span><br><span class="line">/&gt;</span><br><span class="line">&lt;BaseButton @click=&quot;search&quot;&gt;</span><br><span class="line">  &lt;BaseIcon name=&quot;search&quot;/&gt;</span><br><span class="line">&lt;/BaseButton&gt;</span><br></pre></td></tr></table></figure><h3 id="3-vue-CLI脚手架-安装视频"><a href="#3-vue-CLI脚手架-安装视频" class="headerlink" title="3.vue CLI脚手架    安装视频"></a>3.vue CLI脚手架    <a href="https://learning.dcloud.io/#/?vid=14" target="_blank" rel="noopener">安装视频</a></h3><p>1.脚手架是通过webpack搭建的开发环境</p><p>2.使用ES6语法</p><p>3.打包和压缩JS为一个文件</p><p>4.项目文件在编译环境中编辑，而不是浏览器</p><p>5.实现页面自动刷新</p><h4 id="新建项目-官方文件"><a href="#新建项目-官方文件" class="headerlink" title="新建项目   官方文件"></a>新建项目   <a href="https://cli.vuejs.org/guide/creating-a-project.html#vue-create" target="_blank" rel="noopener">官方文件</a></h4><h4 id="1-cmd里进入项目要放置的位置（D-Vue-projects），vue-create-secondproject-新版cli创建命令"><a href="#1-cmd里进入项目要放置的位置（D-Vue-projects），vue-create-secondproject-新版cli创建命令" class="headerlink" title="1. cmd里进入项目要放置的位置（D:\Vue_projects），vue create secondproject     新版cli创建命令"></a>1. cmd里进入项目要放置的位置（D:\Vue_projects），vue create secondproject     新版cli创建命令</h4><p>自定义安装时，空格选择或取消，Linter/Former不选，这个会强制编码格式，前期可以只选Babel</p><h4 id="2-图像化安装-，cmd内输入vue-ui-进入图形化页面创建"><a href="#2-图像化安装-，cmd内输入vue-ui-进入图形化页面创建" class="headerlink" title="2.图像化安装 ，cmd内输入vue ui 进入图形化页面创建"></a>2.图像化安装 ，cmd内输入vue ui 进入图形化页面创建</h4><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><h4 id="3-npm-run-server-运行项目"><a href="#3-npm-run-server-运行项目" class="headerlink" title="3.npm run server 运行项目"></a>3.npm run server 运行项目</h4><p>大致分三个部分</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div id=&quot;app&quot;&gt;</span><br><span class="line">&lt;Header /&gt;</span><br><span class="line">&lt;img alt=&quot;Vue logo&quot; src=&quot;./assets/logo.png&quot;&gt;</span><br><span class="line">&lt;HelloWorld msg=&quot;Welcome to Your Vue.js App&quot; /&gt;</span><br><span class="line">&lt;h1&gt;App.vue&lt;/h1&gt;</span><br><span class="line">&lt;Users :users=&apos;users&apos;&gt;&lt;/Users&gt;</span><br><span class="line"></span><br><span class="line">&lt;Footer /&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import HelloWorld from &apos;./components/HelloWorld.vue&apos;</span><br><span class="line">import Users from &apos;./components/Users.vue&apos;</span><br><span class="line">import Header from &apos;./components/Header.vue&apos;</span><br><span class="line">import Footer from &apos;./components/Footer.vue&apos;</span><br><span class="line">export default &#123;</span><br><span class="line">name: &apos;app&apos;,</span><br><span class="line">data() &#123;</span><br><span class="line">return &#123;</span><br><span class="line">users: [&#123;</span><br><span class="line">name: &quot;陈越鹏&quot;,</span><br><span class="line">wechat: &quot;16245335&quot;,</span><br><span class="line">show: false</span><br><span class="line">&#125;,</span><br><span class="line">&#123;</span><br><span class="line">name: &quot;陈越鹏&quot;,</span><br><span class="line">wechat: &quot;16245335&quot;,</span><br><span class="line">show: false</span><br><span class="line">&#125;</span><br><span class="line">]</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">components: &#123;</span><br><span class="line">Users,</span><br><span class="line">HelloWorld,</span><br><span class="line">Header,</span><br><span class="line">Footer,</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style&gt;</span><br><span class="line">#app &#123;</span><br><span class="line">font-family: &apos;Avenir&apos;, Helvetica, Arial, sans-serif;</span><br><span class="line">-webkit-font-smoothing: antialiased;</span><br><span class="line">-moz-osx-font-smoothing: grayscale;</span><br><span class="line">text-align: center;</span><br><span class="line">color: #2c3e50;</span><br><span class="line">margin-top: 60px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">h1 &#123;</span><br><span class="line">color: purple;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="3-结构目录"><a href="#3-结构目录" class="headerlink" title="3.结构目录"></a>3.结构目录</h4><figure class="image-box">                <img src="http://chen.cypeng.cn/20200211目录结构.png" alt="目录结构" title="" class="">                <p>目录结构</p>            </figure><p>pulic：打包之后用于部署生产环境的目录</p><p>src：开发目录</p><p>​     components：整个项目的组件目录,包含单文件组件</p><p>​      App.vue:整个项目的入口文件，完成对组件的引入工作</p><p>package.json：管理项目所需要的各种模块，以及版本号名称</p><h3 id="4-语法"><a href="#4-语法" class="headerlink" title="4.语法"></a>4.语法</h3><h5 id="1-this-list-push-对数组添加对象"><a href="#1-this-list-push-对数组添加对象" class="headerlink" title="1.this.list.push(),对数组添加对象"></a>1.this.list.push(),对数组添加对象</h5><h5 id="2-lt-click-”ssss-event-”-data-aid-’xx’-gt"><a href="#2-lt-click-”ssss-event-”-data-aid-’xx’-gt" class="headerlink" title="2.   &lt;@click=”ssss($event)”    data-aid=’xx’&gt;"></a>2.   &lt;@click=”ssss($event)”    data-aid=’xx’&gt;</h5><p>​        e.srcElement表示dom节点</p><p>​       ssss(e){</p><p>​                 e.srcElement.style.background=”red”</p><p>​                 e.srcElement.dataset.aid</p><p>​             }</p><h5 id="3-双向数据绑定"><a href="#3-双向数据绑定" class="headerlink" title="3.  双向数据绑定"></a>3.  双向数据绑定</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;example-5&quot;&gt;</span><br><span class="line">&lt;select v-model=&quot;selected&quot;&gt;</span><br><span class="line">&lt;option disabled value=&quot;&quot;&gt;请选择&lt;/option&gt;</span><br><span class="line">&lt;option value=&quot;陈&quot;&gt;A&lt;/option&gt;</span><br><span class="line">&lt;option value=&quot;月&quot;&gt;B&lt;/option&gt;</span><br><span class="line">&lt;option value=&quot;有&quot;&gt;C&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;span&gt;Selected: &#123;&#123; selected &#125;&#125;&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>主要是v-model，表单几个元素都是这样，除了输入框(直接用v-model绑定)，通过value传值，v-model绑定值。</p><h5 id="特殊："><a href="#特殊：" class="headerlink" title="特殊："></a>特殊：</h5><p>checkbox，分单个和多个。单个时候或者刻意不写value的时候，不需要写value，v-model绑定的是一个布尔值，true和false。多个的时候，需要写value，这时候v-model绑定的是数组，内部是选定的复选框对应的value集合</p><h3 id="5-todolist-http-www-todolist-cn"><a href="#5-todolist-http-www-todolist-cn" class="headerlink" title="5.todolist      http://www.todolist.cn/"></a>5.todolist      <a href="http://www.todolist.cn/" target="_blank" rel="noopener">http://www.todolist.cn/</a></h3><h5 id="1-代码"><a href="#1-代码" class="headerlink" title="1.代码"></a>1.代码</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=<span class="string">"text"</span> v-model=<span class="string">"todolist"</span> /&gt;<span class="xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"add"</span>&gt;</span>+增加<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;br /&gt;</span><br><span class="line">&lt;hr /&gt;</span><br><span class="line">&lt;ul&gt;</span><br><span class="line">&lt;li :key=<span class="string">"item.id"</span> v-<span class="keyword">for</span>=<span class="string">"(item,index) in list"</span>&gt;</span><br><span class="line">&#123;&#123;item.item&#125;&#125;-----<span class="xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"del(index)"</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line">&lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">&lt;/u</span>l&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">add() &#123;<span class="keyword">this</span>.list.push(&#123;<span class="attr">id</span>:<span class="keyword">this</span>.idcount++,<span class="attr">item</span>:<span class="keyword">this</span>.todolist&#125;),</span><br><span class="line"><span class="keyword">this</span>.todolist=<span class="string">''</span></span><br><span class="line">&#125;,</span><br><span class="line">del(index)&#123;</span><br><span class="line">alert(<span class="keyword">this</span>.list[index].id)</span><br><span class="line"><span class="keyword">this</span>.list.splice(index,<span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="坑坑坑："><a href="#坑坑坑：" class="headerlink" title="坑坑坑："></a>坑坑坑：</h5><h5 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h5><p>在vue中v-for中使用splice删除元素的坑。</p><p>众所周知，我们使用v-for循环dom/组件，它有两个属性，item：当前循环的每一个元素，index：当前循环元素所对应的下标</p><p>个人习惯，平时绑定key值的时候，都习惯采用如下写法，直接绑定下标。但是因为我们绑定key值采取的是index，我们这边删除元素会导致顺序错乱问题，并不会以我们期望的那样，点击第一条就会删除第一条。</p><p>查看vue官网对于key的介绍，最终找到了问题。</p><p>这里通俗的解释下：</p><p>下标在这是个临时身份，它的默认位置不会变化，如果你里面的item项移动了，那么移动的数据对应到index上，所以你的index对应的那个项就不是你想要的那个项了</p><p>所以本质上 :key=index 它们是同一个inedx 在不变化的前提下，一旦发生变化了，就不再是我们期望的那样了</p><p>所以这也是官方不推荐使用:key=”index”的原因，如果业务发生变化，你的代码就出问题了<br>————————————————<br>版权声明：本文为CSDN博主「坏丶毛病」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/qq_43363884/article/details/102910256" target="_blank" rel="noopener">https://blog.csdn.net/qq_43363884/article/details/102910256</a></p><h5 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h5><p>数组使用splice进行改换某一位置的数据</p><h3 id="6-localStorage"><a href="#6-localStorage" class="headerlink" title="6.localStorage"></a>6.localStorage</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">localStorage.setItem(&quot;key&quot;, JSON.stringify(data));    </span><br><span class="line">localStorage.getItem(&quot;key&quot;);</span><br><span class="line">localStorage.removeItem(&quot;key&quot;);</span><br><span class="line">localStorage.clear();</span><br></pre></td></tr></table></figure><p>localStorage封装：</p><p>   src目录下新建model文件夹，文件夹下新建storage.js文</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> storage = &#123;</span><br><span class="line">set(key, value) &#123;</span><br><span class="line">localStorage.setItem(key, <span class="built_in">JSON</span>.stringify(value));</span><br><span class="line">&#125;,</span><br><span class="line">get(key) &#123;</span><br><span class="line"><span class="keyword">return</span> localStorage.getItem(key);</span><br><span class="line">&#125;,</span><br><span class="line">remove(key) &#123;</span><br><span class="line">localStorage.removeItem(key);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> storage</span><br></pre></td></tr></table></figure><p> 引用     import storage from ‘./model/storage.js’</p><p>​          storage.set(“ll”,’xxx’)</p><h3 id="7-单文件组件"><a href="#7-单文件组件" class="headerlink" title="7.单文件组件"></a>7.单文件组件</h3><p>   所有内容都要在一个元素里，div</p><h3 id="8-生命周期函数-生命周期钩子"><a href="#8-生命周期函数-生命周期钩子" class="headerlink" title="8.生命周期函数/生命周期钩子"></a>8.生命周期函数/生命周期钩子</h3><p>组件挂载以及组件更新组件销毁的时候触发的一系列方法  这些方法叫做生命周期函数  </p><p>mounted 编译完成就会触发</p><h3 id="9-请求数据"><a href="#9-请求数据" class="headerlink" title="9.请求数据"></a>9.请求数据</h3><p>项目中安装install时，在项目目录下，npm install xxx  –save</p><p>注意加–save，将依赖到项目中</p><p>一般安装模块步骤</p><p>1.安装模块</p><p>2.在main.js内挂载   import xx form xxxx</p><p>3.使用 在main.js  Vue.use(xx)</p><p>4.使用   </p><p>axios请求数据</p><p>1.安装npm install axios –save</p><p>2.哪里使用在哪里引入，各个单文件组件  import Axios from “axios”</p><p>3.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Axios.get(<span class="string">'/user?ID=12345'</span>)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// handle success</span></span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// handle error</span></span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// always executed</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Optionally the request above could also be done as</span></span><br><span class="line">Axios.get(<span class="string">'/user'</span>, &#123;</span><br><span class="line">    params: &#123;</span><br><span class="line">      ID: <span class="number">12345</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// always executed</span></span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Axios.post(&apos;/user&apos;, &#123;</span><br><span class="line">    firstName: &apos;Fred&apos;,</span><br><span class="line">    lastName: &apos;Flintstone&apos;</span><br><span class="line">  &#125;)</span><br><span class="line">  .then(function (response) &#123;</span><br><span class="line">    console.log(response);</span><br><span class="line">  &#125;)</span><br><span class="line">  .catch(function (error) &#123;</span><br><span class="line">    console.log(error);</span><br><span class="line">  &#125;);</span><br></pre></td></tr></table></figure><h3 id="10-组件传值"><a href="#10-组件传值" class="headerlink" title="10.组件传值"></a>10.组件传值</h3><h5 id="1-父子组件传值"><a href="#1-父子组件传值" class="headerlink" title="1.父子组件传值"></a>1.父子组件传值</h5><p>​        父传子 ：     在子组件内data同级加上 props:[“title”]   ,这时在子组件内能直接使用title的值。不过title的值由父组件传递。在父组件内引用子组件时   &lt;子 :title=”sssss”&gt;&lt;/子&gt;    sssss就是父组件给子组件传递的值，也可以传递方法，传递方法时只用传递方法名，比如  &lt;子 :title=”sssss”  :run=”ss”&gt;&lt;/子&gt;   ss为父组件方法名，还可以把整个实例传递给子组件 ，在子组件内通过 this.run()调用</p><p>​        父组件主动获取子组件里的数据和方法   ：</p><p>​                                              1.调用子组件的时候定义一个ref</p><p>​                                                                 &lt;子 ref=”header”&gt;&lt;/子&gt;</p><p>​                                               2.在父组件里面通过</p><p>​                                                                  this.$refs.header.属性或者方法</p><p>​                                                                  this.$refs.header.name</p><p>​                                                                  this.$refs.header.getdata()</p><p>​        子组件主动获取父组件里的数据和方法   ：</p><p>​                                                                  this.$parent.属性或者方法</p><p>​                                                                  this.$parent.name</p><p>​                                                                  this.$parent.getdata()</p><h5 id="2-非父子组件之间传值"><a href="#2-非父子组件之间传值" class="headerlink" title="2.非父子组件之间传值"></a>2.非父子组件之间传值</h5><p>​      </p><h3 id="11-vue-router-参考链接或者哔哩哔哩大地视频-参考链接"><a href="#11-vue-router-参考链接或者哔哩哔哩大地视频-参考链接" class="headerlink" title="11.vue-router    参考链接或者哔哩哔哩大地视频 参考链接"></a>11.vue-router    <a href="https://www.cnblogs.com/wyt007/p/10422316.html" target="_blank" rel="noopener">参考链接</a>或者哔哩哔哩大地视频 <a href="https://www.cnblogs.com/wisewrong/p/6277262.html" target="_blank" rel="noopener">参考链接</a></h3><h5 id="1-引用-在main-js内"><a href="#1-引用-在main-js内" class="headerlink" title="1.引用   在main.js内"></a>1.引用   在main.js内</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"></span><br><span class="line">Vue.use(VueRouter)</span><br></pre></td></tr></table></figure><h5 id="2-定义路由-main-js"><a href="#2-定义路由-main-js" class="headerlink" title="2.定义路由   main.js"></a>2.定义路由   main.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">'/foo'</span>, <span class="attr">component</span>: Foo &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">'/bar'</span>, <span class="attr">component</span>: Bar &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h5 id="3-实例化vue-router-main-js"><a href="#3-实例化vue-router-main-js" class="headerlink" title="3.实例化vue-router main.js"></a>3.实例化vue-router main.js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes <span class="comment">// (缩写) 相当于 routes: routes</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="5-挂载-main-js"><a href="#5-挂载-main-js" class="headerlink" title="5.挂载   main.js"></a>5.挂载   main.js</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">new Vue(&#123;</span><br><span class="line">  el: &apos;#app&apos;,</span><br><span class="line">  router,</span><br><span class="line">  render: h =&gt; h(App)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App.vue'</span></span><br><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Footer <span class="keyword">from</span> <span class="string">"./components/Foot.vue"</span></span><br><span class="line"><span class="keyword">import</span> Users <span class="keyword">from</span> <span class="string">"./components/Us.vue"</span></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  <span class="comment">// &#123; path: '/', component: Footer &#125;,</span></span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">'/foo'</span>, <span class="attr">component</span>: Footer &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">'/user'</span>, <span class="attr">component</span>: Users &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes, <span class="comment">// (缩写) 相当于 routes: routes</span></span><br><span class="line">  mode: <span class="string">'history'</span>,   </span><br><span class="line">  <span class="comment">// 在创建的 router 对象中，如果不配置 mode，就会使用默认的 hash 模式，该模式下会将路径格式化为 #! 开头。</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 添加 mode: 'history' 之后将使用 HTML5 history 模式，该模式下没有 # 前缀，而且可以使用 pushState 和 replaceState 来管理记录。</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 关于 HTML5 history 模式的更多内容，可以参考官方文档：https://router.vuejs.org/zh-cn/essentials/history-mode.html</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure><h5 id="6-总结：路由模块化"><a href="#6-总结：路由模块化" class="headerlink" title="6.总结：路由模块化"></a>6.总结：路由模块化</h5><p>components同级目录下创建router文件夹，并创建router.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> VueRouter <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> Footer <span class="keyword">from</span> <span class="string">"../components/Foot.vue"</span></span><br><span class="line"><span class="keyword">import</span> Users <span class="keyword">from</span> <span class="string">"../components/Us.vue"</span></span><br><span class="line">Vue.use(VueRouter)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  <span class="comment">// &#123; path: '/', component: Footer &#125;,</span></span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">'/foo'</span>, <span class="attr">component</span>: Footer &#125;,</span><br><span class="line">  &#123; <span class="attr">path</span>: <span class="string">'/user'</span>, <span class="attr">component</span>: Users &#125;</span><br><span class="line">]</span><br><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes, <span class="comment">// (缩写) 相当于 routes: routes</span></span><br><span class="line">  mode: <span class="string">'history'</span>,   </span><br><span class="line">  <span class="comment">// 在创建的 router 对象中，如果不配置 mode，就会使用默认的 hash 模式，该模式下会将路径格式化为 #! 开头。</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 添加 mode: 'history' 之后将使用 HTML5 history 模式，该模式下没有 # 前缀，而且可以使用 pushState 和 replaceState 来管理记录。</span></span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 关于 HTML5 history 模式的更多内容，可以参考官方文档：https://router.vuejs.org/zh-cn/essentials/history-mode.html</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router  <span class="comment">//暴露路由</span></span><br></pre></td></tr></table></figure><p>多了最后一句代码，暴露出来router</p><h5 id="在main-js使用"><a href="#在main-js使用" class="headerlink" title="在main.js使用"></a>在main.js使用</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router/router.js'</span></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">router,</span><br><span class="line">  render: <span class="function"><span class="params">h</span> =&gt;</span> h(App),</span><br><span class="line">&#125;).$mount(<span class="string">'#app'</span>)</span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用history模式，在nginx内要加上</span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">  <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用history模式，在nginx内要加上</p><h5 id="7-介绍"><a href="#7-介绍" class="headerlink" title="7.介绍"></a>7.介绍</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span>   动态加载的组件放在哪里，匹配到的组件放置的位置</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attr">path</span>: <span class="string">'*'</span>, <span class="attr">redirect</span>: <span class="string">'/b'</span> &#125;  重定向，  *代表没有匹配到</span><br></pre></td></tr></table></figure><p>路由不一定设置，没有设置，默认从App.vue进入</p><h3 id="12-动态路由-GET传值"><a href="#12-动态路由-GET传值" class="headerlink" title="12.动态路由 GET传值"></a>12.动态路由 GET传值</h3><p>如小总结内所示，动态路由 页面内使用时，this.$route.params.name获取</p><p>get传值  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-link to=&quot;/detail?id=xxx&quot;&gt;跳转&lt;/router-link&gt; </span><br><span class="line"> &#123; path: &apos;/detail&apos;, component: User &#125;    //不一样</span><br><span class="line"> this.$route.query.name获取    //不一样</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 带查询参数，变成 /register?plan=private</span></span><br><span class="line"><span class="keyword">this</span>.$router.push(&#123; <span class="attr">path</span>: <span class="string">'register'</span>, <span class="attr">query</span>: &#123; <span class="attr">plan</span>: <span class="string">'private'</span> &#125;&#125;)</span><br><span class="line"><span class="keyword">this</span>.$route.query.plan  获取</span><br></pre></td></tr></table></figure><h3 id="13-路由嵌套"><a href="#13-路由嵌套" class="headerlink" title="13.路由嵌套"></a>13.路由嵌套</h3><p>​    route-view的显示内容，是根据当前url匹配route内定义的路由，匹配到则显示。注意看是第一层还是嵌套的第二层内显示。比如第一级，则在App.vue的route-view内显示匹配到的component。第二级，则在匹配到第二级的父组件(即第一级的component)里的route-view显示component</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">routes: [</span><br><span class="line">    &#123; <span class="attr">path</span>: <span class="string">'/user/:id'</span>, <span class="attr">component</span>: User,</span><br><span class="line">      children: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">// 当 /user/:id/profile 匹配成功，</span></span><br><span class="line">          <span class="comment">// UserProfile 会被渲染在 User 的 &lt;router-view&gt; 中</span></span><br><span class="line">          path: <span class="string">'profile'</span>,</span><br><span class="line">          component: UserProfile</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="comment">// 当 /user/:id/posts 匹配成功</span></span><br><span class="line">          <span class="comment">// UserPosts 会被渲染在 User 的 &lt;router-view&gt; 中</span></span><br><span class="line">          path: <span class="string">'posts'</span>,</span><br><span class="line">          component: UserPosts</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure><p>注意children里的path前面不写  /  符号</p><h3 id="14-element-UI"><a href="#14-element-UI" class="headerlink" title="14.element UI"></a>14.element UI</h3><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p> npm i element-ui -S      -S表示意思和–save一样</p><h5 id="引入-在main-js下"><a href="#引入-在main-js下" class="headerlink" title="引入  在main.js下"></a>引入  在main.js下</h5><p>import ElementUI from ‘element-ui’;<br>import ‘element-ui/lib/theme-chalk/index.css’;</p><p>Vue.use(ElementUI);</p><h3 id="15-vuex"><a href="#15-vuex" class="headerlink" title="15.vuex"></a>15.vuex</h3><p>vuex：专为vue.js应用程序开发的状态管理模式</p><p>解决不同组件的数据共享，数据持久化（特别是非父子）小项目尽量不要用，大地老师无人点餐，无人收银系统去学习这个概念</p><h1 id="小总结"><a href="#小总结" class="headerlink" title="小总结"></a>小总结</h1><h2 id="1-vue-ref的应用，可以获取dom节点，并操作"><a href="#1-vue-ref的应用，可以获取dom节点，并操作" class="headerlink" title="1. vue ref的应用，可以获取dom节点，并操作"></a>1. vue ref的应用，可以获取dom节点，并操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">     &lt;p ref=&apos;p&apos;&gt;我是测试段落2&lt;/p&gt;</span><br><span class="line">&lt;input type=&quot;text&quot; ref=&quot;input&quot;/&gt;</span><br><span class="line">&lt;button @click=&quot;foucs&quot;&gt;click me  输入框获得焦点&lt;/button&gt;</span><br><span class="line">组件内方法</span><br><span class="line">methods:&#123;</span><br><span class="line">foucs()&#123;</span><br><span class="line">this.$refs.input.focus();//获取焦点</span><br><span class="line">this.$refs.p.style.color=&apos;red&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「皮的狠」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https://blog.csdn.net/qq_41709082/article/details/84717330</span><br></pre></td></tr></table></figure><p>在Vue2.x中，ref是被用来给元素或子组件注册引用信息的。如果在普通的DOM元素上使用，ref指向的就是DOM元素；如果用在子组件上，ref就指向组件实例。   用在子组件上的大标签上，可以父组件调用子组件数据和方法</p><h2 id="2-1"><a href="#2-1" class="headerlink" title="2."></a>2.</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">router.push(&#123; path: `/user/$&#123;userId&#125;` &#125;)     和  &lt;router-link :to=&quot;&apos;/detail/&apos;+id&quot;&gt;跳转&lt;/router-link&gt;  (id是参数值)      :::::::::::::</span><br><span class="line">   接收参数  const router = new VueRouter(&#123;</span><br><span class="line">  routes: [</span><br><span class="line">    // 动态路径参数 以冒号开头</span><br><span class="line">    &#123; path: &apos;/user/:id&apos;, component: User &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-route-link绑定事件无效"><a href="#3-route-link绑定事件无效" class="headerlink" title="3.route-link绑定事件无效"></a>3.route-link绑定事件无效</h3><p>在vue中绑定事件是一下这种方法：</p><p>v-on:click=’函数名称’;</p><p>@click = ‘函数名称’;</p><p>这两种写法都是正常。</p><p>但是我们使用了 vue-router 路由时会使用 router-link&gt;标签来代替 a 标签跳转。我们在 vue-router 标签绑定 @click 事件 。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`&lt;router-link to=`</span><span class="string">`"/date"`</span> <span class="string">`@click=`</span><span class="string">`"nav_click"`</span><span class="string">`&gt;最新&lt;/router-link&gt;`</span> <span class="string">`methods: &#123;`</span><span class="string">` `</span><span class="string">`nav_click: `</span><span class="string">`function`</span><span class="string">`() &#123;`</span><span class="string">`       `</span><span class="string">`console.log(1)`</span><span class="string">` `</span><span class="string">`&#125;`</span><span class="string">`&#125;`</span></span><br></pre></td></tr></table></figure><p>却发现函数并没有执行。这是怎么回事。。。　　</p><p>加 .native 修饰符就可以执行事件了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`&lt;router-link to=``&quot;/date&quot;` `@click.native=``&quot;nav_click&quot;``&gt;最新&lt;/router-link&gt;` `methods: &#123;`` ``nav_click: ``function``() &#123;``       ``console.log(1)`` ``&#125;``&#125;　　`</span><br></pre></td></tr></table></figure><p>解释：</p><p>1： 因为它是自定义标签，根本就没有事件和方法，所以不触发，加个native 就是告诉vue 这个标签现在有主了 它是H5标签 可以加事件了。</p><p>2：父组件要想在子组件监听自己的click事件就得加native，router-link是标签啊。哪里有父组件？？？？ </p><p> 群里大佬一句说明了原因 router-link  其实就是一个封装好的 .vue 组件，所以需要 加.native修饰符才能绑定事件</p><h3 id="4-修改element-ui里的样式"><a href="#4-修改element-ui里的样式" class="headerlink" title="4.修改element ui里的样式"></a>4.修改element ui里的样式</h3><p>比如table表格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;style &gt;</span><br><span class="line">.tablecontent &#123;</span><br><span class="line"></span><br><span class="line">width: 80%;</span><br><span class="line">margin: 0 auto;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.tablecontent th&#123;       //tablecontent为表格类名，th对应的是elementui的el-table-column</span><br><span class="line">color: red;                    //不要按elementui给的标签定义，对比到html标签再修饰</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h3 id="5-前端接收含-n换行的文本展示。"><a href="#5-前端接收含-n换行的文本展示。" class="headerlink" title="5.前端接收含\n换行的文本展示。"></a>5.前端接收含\n换行的文本展示。</h3><p>​      white-space:pre-wrap;</p><p>style内加入这行代码</p><h3 id="6-读取文件"><a href="#6-读取文件" class="headerlink" title="6.读取文件"></a>6.读取文件</h3><p>const reader = new FileReader()<br>​        // 文件内容载入完毕之后的回调。<br>​        reader.onload = function(e) {<br>​          console.log(e.target.result)<br>​        }<br>​        reader.readAsText(selectedFile)<br>————————————————<br>版权声明：本文为CSDN博主「SilenceJude」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/SilenceJude/article/details/97002176" target="_blank" rel="noopener">https://blog.csdn.net/SilenceJude/article/details/97002176</a></p><h3 id="7-build打包项目时，部署服务器后，请求静态资源404"><a href="#7-build打包项目时，部署服务器后，请求静态资源404" class="headerlink" title="7.build打包项目时，部署服务器后，请求静态资源404"></a>7.build打包项目时，部署服务器后，请求静态资源404</h3><p>在根目录创建vue.config.js 文件</p><p>// 请把代码文本粘贴到下方（请勿用图片代替代码）</p><p>module.exports = {<br>​    publicPath: ‘./‘</p><p>}</p><p>重新用 npm run build 打包项目部署到服务器 </p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Python爬虫</title>
      <link href="/2020/03/05/Python%E7%88%AC%E8%99%AB/"/>
      <url>/2020/03/05/Python%E7%88%AC%E8%99%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="Python爬虫"><a href="#Python爬虫" class="headerlink" title="Python爬虫"></a>Python爬虫</h1><h2 id="一、Python爬虫快速入门"><a href="#一、Python爬虫快速入门" class="headerlink" title="一、Python爬虫快速入门"></a>一、Python爬虫快速入门</h2><h3 id="1-什么是爬虫"><a href="#1-什么是爬虫" class="headerlink" title="1.什么是爬虫"></a>1.什么是爬虫</h3><h4 id="网络爬虫：模拟浏览器访问和获取互联网信息的一个程序"><a href="#网络爬虫：模拟浏览器访问和获取互联网信息的一个程序" class="headerlink" title="网络爬虫：模拟浏览器访问和获取互联网信息的一个程序"></a>网络爬虫：模拟浏览器访问和获取互联网信息的一个程序</h4><h3 id="2-爬虫分类"><a href="#2-爬虫分类" class="headerlink" title="2.爬虫分类"></a>2.爬虫分类</h3><h4 id="通用网络爬虫：百度。谷歌。雅虎。。。搜索引擎"><a href="#通用网络爬虫：百度。谷歌。雅虎。。。搜索引擎" class="headerlink" title="通用网络爬虫：百度。谷歌。雅虎。。。搜索引擎"></a>通用网络爬虫：百度。谷歌。雅虎。。。搜索引擎</h4><p>特点：关键字获取既定的目标，覆盖率很大</p><h4 id="聚焦网络爬虫"><a href="#聚焦网络爬虫" class="headerlink" title="聚焦网络爬虫"></a>聚焦网络爬虫</h4><p>特点：到互联网上有选择有目的去抓取特定的目标和相关的主题内容</p><h4 id="增量式网购爬虫"><a href="#增量式网购爬虫" class="headerlink" title="增量式网购爬虫"></a>增量式网购爬虫</h4><p>特点：只采取增量式更新或者是只爬取新产生或者已经发生变化的网页</p><h4 id="深层网络爬虫"><a href="#深层网络爬虫" class="headerlink" title="深层网络爬虫"></a>深层网络爬虫</h4><p>表层：通过传统搜索引擎打开的静态网页</p><p>深层：大部分内容是不可以通过静态链接获取的，隐藏在搜索表单之后的一些数据，有可能需要用户提交一些关键词才可以获的web页面（比如登录后）</p><h2 id="二、实战"><a href="#二、实战" class="headerlink" title="二、实战"></a>二、实战</h2><h3 id="1-requests"><a href="#1-requests" class="headerlink" title="1.requests"></a>1.requests</h3><h4 id="Requests：让HTTP服务人类"><a href="#Requests：让HTTP服务人类" class="headerlink" title="Requests：让HTTP服务人类"></a>Requests：让HTTP服务人类</h4><ol><li>import requests  导入Requests模块</li><li><p>尝试获取某个网页   r=requests.get(“<a href="https://api.github.com/events&quot;" target="_blank" rel="noopener">https://api.github.com/events&quot;</a>)   </p><p>​    这样我们就有一个名叫r的Response对象，我们可以从这个对象里获取所有我们想要的信息</p></li><li><p>最简单的反爬取</p><p>请求头 User-Agent</p><p>用来确保你是用浏览器来访问的，不能用代码访问网站</p><p>但是我们可以用代码来伪装浏览器</p></li><li><p>print(r)  打印输出http状态码    一般使用print(r.text)</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 告诉服务器我们是浏览器  字典格式</span><br><span class="line">header=&#123;&apos;User-Agent&apos;: &apos;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36&apos;&#125;</span><br></pre></td></tr></table></figure></li><li><p>python函数调用，默认参数 a=“xx“，不传入a值则默认。如果实参写出a=，b=，这时候实参顺序可不跟形参对应，会自动匹配。不定长参数 “*a”和“**a”，一个星号表示以元组形式接收不定长的参数。两个星号表示以字典形式接收，此时实参传递时要先写上字典键名，如x=，y=，这时候 a={“x”：，“y”:}</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">r.encoding = &quot;utf-8&quot;    //解决爬虫乱码问题</span><br></pre></td></tr></table></figure></li><li></li><li></li><li></li><li></li><li></li></ol><h3 id="2-Xpath-提取信息-参考博客链接内容"><a href="#2-Xpath-提取信息-参考博客链接内容" class="headerlink" title="2.Xpath 提取信息    参考博客链接内容"></a>2.Xpath 提取信息    <a href="https://www.jianshu.com/p/85a3004b5c06" target="_blank" rel="noopener">参考博客链接内容</a></h3><h4 id="介绍关系"><a href="#介绍关系" class="headerlink" title="介绍关系"></a>介绍关系</h4><p>1.父：每个元素以及属性都有一个父</p><p>2.子：元素节点可有零个、一个或者多个子</p><p>3.同胞：拥有相同的父的节点</p><p>4.先辈：某节点的父、父的父，等等</p><p>5.后代：某节点的子，子的子等等</p><h4 id="Xpath语法"><a href="#Xpath语法" class="headerlink" title="Xpath语法"></a>Xpath语法</h4><h5 id="表达式-描述"><a href="#表达式-描述" class="headerlink" title="表达式                                  描述"></a>表达式                                  描述</h5><p>nodename                          选取此节点的所有子节点</p><p>/                                            从根节点选取元素(直接子元素)</p><p>//                                           从匹配选择的当前节点选择文档中的节点，而不考虑它们的位置（任意位置都能匹配）</p><p>.                                             选取当前节点</p><p>..                                            选取当前节点的父节点</p><p>@                                           选取属性</p><p>1.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 初始化  标准化</span><br><span class="line">html=etree.HTML(text)</span><br><span class="line"># 提取我们想要的信息 需要些xpath语法</span><br><span class="line">html.xpath(//li[@class=&quot;item-inactive&quot;])  //选取所有class属性为item-inactive的li元素</span><br></pre></td></tr></table></figure><p>2.选取节点后获取值</p><p>​     1.获取属性    xxxx/@class</p><p>​      2.获取值        xxxx/text()</p><p>3.zip拉链函数   ：两个list合成一个list，list内的一个对象是包含两个元素的元组。</p><p>​     a=[1,2,3]    b=[4,5,6]    for x,y in zip(a,b)      x=1,y=4……</p><p>4.保存数据</p><p>​     with open(‘move.json’,’a’,encoding=’utf-8’) as f:</p><p>​              f.write(data)</p><p>5.第一版代码</p><p>使用json.dumps是主要加上ensure_ascii=False，默认为true，默认使用ascii编码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Author:陈越鹏</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取页面数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOnePage</span><span class="params">(page)</span>:</span></span><br><span class="line">    <span class="comment"># 路径</span></span><br><span class="line">    url = <span class="string">'https://movie.douban.com/top250?start=&#123;start&#125;'</span>.format(start=<span class="number">25</span>*page)</span><br><span class="line">    <span class="comment"># 告诉服务器我们是浏览器  字典格式</span></span><br><span class="line">    header = &#123;</span><br><span class="line">      <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.get(url, headers=header)</span><br><span class="line">    r.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    <span class="keyword">return</span> r.text</span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理页面数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(text)</span>:</span></span><br><span class="line">    <span class="comment"># 初始化  标准化</span></span><br><span class="line">    html=etree.HTML(text)</span><br><span class="line">    <span class="comment"># 提取我们想要的信息 需要些xpath语法</span></span><br><span class="line">    titles=html.xpath(<span class="string">'//ol[@class="grid_view"]/li/div[@class="item"]//div[@class="hd"]//span[1][@class="title"]/text()'</span>)</span><br><span class="line">    maincontents=html.xpath(<span class="string">'//ol[@class="grid_view"]/li/div[@class="item"]//div[@class="bd"]/p[2]/span/text()'</span>)</span><br><span class="line">    print(titles)</span><br><span class="line">    print(maincontents)</span><br><span class="line">    <span class="keyword">for</span> title,maincontent <span class="keyword">in</span> zip(titles,maincontents):</span><br><span class="line">        item=&#123;<span class="string">"title"</span>:title,<span class="string">"maincontent"</span>:maincontent&#125;</span><br><span class="line">        <span class="keyword">yield</span> item</span><br><span class="line"><span class="comment"># 保存数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">saveFile</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'move.json'</span>, <span class="string">'a'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        savedata=json.dumps(data,ensure_ascii=<span class="keyword">False</span>)+<span class="string">",\n"</span></span><br><span class="line">        f.write(savedata)</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> page <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        data = getOnePage(page)</span><br><span class="line">        returns = parse(data)</span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> returns:</span><br><span class="line">            saveFile(d)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:     </span><br><span class="line">    index()</span><br></pre></td></tr></table></figure><p>6.写入文件第一种方式</p><p>   f= open()</p><p>​    f.write()</p><p>​    f.close()</p><p>7.写文件第二种方式</p><p> with open() as f:</p><p>​       f.write()</p><p>8,按行读取文件</p><p>​       with open() as f:</p><p>​                 for line in f:</p><p>​                       print(line)</p><p>9.<code>if __name__==&#39;__main__&#39;</code></p><h2 id="完整示例-通过json获取动态页面数据-QQ音乐"><a href="#完整示例-通过json获取动态页面数据-QQ音乐" class="headerlink" title="完整示例 通过json获取动态页面数据   QQ音乐"></a>完整示例 通过json获取动态页面数据   QQ音乐</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">Author:陈越鹏</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line">count=<span class="number">0</span></span><br><span class="line"><span class="comment"># 连接数据库</span></span><br><span class="line">db = pymysql.connect(host=<span class="string">"localhost"</span>, user=<span class="string">"root"</span>, passwd=<span class="string">"chen714611"</span>, db=<span class="string">"bishe"</span>)</span><br><span class="line">cursor = db.cursor()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取歌手名称</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSongname</span><span class="params">()</span>:</span></span><br><span class="line">    url=<span class="string">'https://u.y.qq.com/cgi-bin/musicu.fcg?-=getUCGI385957273946514&amp;g_tk=5381&amp;loginUin=1643544132&amp;hostUin=0&amp;format=json&amp;inCharset=utf8&amp;outCharset=utf-8&amp;notice=0&amp;platform=yqq.json&amp;needNewCode=0&amp;data=%7B%22comm%22%3A%7B%22ct%22%3A24%2C%22cv%22%3A0%7D%2C%22singerList%22%3A%7B%22module%22%3A%22Music.SingerListServer%22%2C%22method%22%3A%22get_singer_list%22%2C%22param%22%3A%7B%22area%22%3A-100%2C%22sex%22%3A-100%2C%22genre%22%3A-100%2C%22index%22%3A-100%2C%22sin%22%3A0%2C%22cur_page%22%3A1%7D%7D%7D'</span></span><br><span class="line">    header = &#123;</span><br><span class="line">        <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.get(url, headers=header)</span><br><span class="line">    r.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    <span class="keyword">return</span> r.json()[<span class="string">"singerList"</span>][<span class="string">"data"</span>][<span class="string">"singerlist"</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取页面数据</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOnePage</span><span class="params">(name)</span>:</span></span><br><span class="line">    <span class="comment"># 路径   获取关键字歌曲信息 主要是歌曲id，在返回值中是mid</span></span><br><span class="line">    <span class="comment"># url = 'https://c.y.qq.com/soso/fcgi-bin/client_search_cp?ct=24&amp;qqmusic_ver=1298&amp;new_json=1&amp;remoteplace=txt.yqq.song&amp;searchid=60017520853485648&amp;t=0&amp;aggr=1&amp;cr=1&amp;catZhida=1&amp;lossless=0&amp;flag_qc=0&amp;p=&#123;page&#125;&amp;n=&#123;oneNum&#125;&amp;w=&#123;search&#125;&amp;g_tk=5381&amp;loginUin=1643544132&amp;hostUin=0&amp;format=json&amp;inCharset=utf8&amp;outCharset=utf-8&amp;notice=0&amp;platform=yqq.json&amp;needNewCode=0'.format(page=1, oneNum=50, search='许嵩')</span></span><br><span class="line">   <span class="comment"># 直接获取歌词</span></span><br><span class="line">    url=<span class="string">'https://c.y.qq.com/soso/fcgi-bin/client_search_cp?ct=24&amp;qqmusic_ver=1298&amp;remoteplace=txt.yqq.lyric&amp;searchid=99184843750496792&amp;aggr=0&amp;catZhida=1&amp;lossless=0&amp;sem=1&amp;t=7&amp;p=&#123;page&#125;&amp;n=&#123;num&#125;&amp;w=&#123;name&#125;&amp;g_tk=5381&amp;loginUin=1643544132&amp;hostUin=0&amp;format=json&amp;inCharset=utf8&amp;outCharset=utf-8&amp;notice=0&amp;platform=yqq.json&amp;needNewCode=0'</span>.format(page=<span class="number">1</span>,num=<span class="number">50</span>,name=name)</span><br><span class="line">    <span class="comment"># 告诉服务器我们是浏览器  字典格式</span></span><br><span class="line">    header = &#123;</span><br><span class="line">      <span class="comment"># 'Referer': 'https: // y.qq.com / portal / player.html',</span></span><br><span class="line">      <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.get(url, headers=header)</span><br><span class="line">    r.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    <span class="keyword">return</span> r.json()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getOnePageZhou</span><span class="params">(name)</span>:</span></span><br><span class="line">    url=<span class="string">'https://c.y.qq.com/soso/fcgi-bin/client_search_cp?ct=24&amp;qqmusic_ver=1298&amp;remoteplace=txt.yqq.lyric&amp;searchid=99184843750496792&amp;aggr=0&amp;catZhida=1&amp;lossless=0&amp;sem=1&amp;t=7&amp;p=&#123;page&#125;&amp;n=&#123;num&#125;&amp;w=&#123;name&#125;&amp;g_tk=5381&amp;loginUin=1643544132&amp;hostUin=0&amp;format=json&amp;inCharset=utf8&amp;outCharset=utf-8&amp;notice=0&amp;platform=yqq.json&amp;needNewCode=0'</span>.format(page=<span class="number">1</span>,num=<span class="number">50</span>,name=name)</span><br><span class="line">    <span class="comment"># 告诉服务器我们是浏览器  字典格式</span></span><br><span class="line">    header = &#123;</span><br><span class="line">      <span class="comment"># 'Referer': 'https: // y.qq.com / portal / player.html',</span></span><br><span class="line">      <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36'</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.get(url, headers=header)</span><br><span class="line">    r.encoding = <span class="string">"utf-8"</span></span><br><span class="line">    <span class="keyword">return</span> r.json()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 处理提取歌词等信息</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(songdetail)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> songdetail[<span class="string">"data"</span>][<span class="string">"lyric"</span>][<span class="string">"list"</span>]:</span><br><span class="line">        <span class="comment"># 拿到songmid对应的歌曲拼接路径</span></span><br><span class="line"></span><br><span class="line">        url=<span class="string">'https://u.y.qq.com/cgi-bin/musicu.fcg?-=getplaysongvkey23250862478882484&amp;g_tk=5381&amp;loginUin=1643544132&amp;hostUin=0&amp;format=json&amp;inCharset=utf8&amp;outCharset=utf-8&amp;notice=0&amp;platform=yqq.json&amp;needNewCode=0&amp;data=%7B%22req%22%3A%7B%22module%22%3A%22CDN.SrfCdnDispatchServer%22%2C%22method%22%3A%22GetCdnDispatch%22%2C%22param%22%3A%7B%22guid%22%3A%221806901424%22%2C%22calltype%22%3A0%2C%22userip%22%3A%22%22%7D%7D%2C%22req_0%22%3A%7B%22module%22%3A%22vkey.GetVkeyServer%22%2C%22method%22%3A%22CgiGetVkey%22%2C%22param%22%3A%7B%22guid%22%3A%221806901424%22%2C%22songmid%22%3A%5B%22&#123;songmid&#125;%22%5D%2C%22songtype%22%3A%5B0%5D%2C%22uin%22%3A%221643544132%22%2C%22loginflag%22%3A1%2C%22platform%22%3A%2220%22%7D%7D%2C%22comm%22%3A%7B%22uin%22%3A1643544132%2C%22format%22%3A%22json%22%2C%22ct%22%3A24%2C%22cv%22%3A0%7D%7D'</span>.format(songmid=item[<span class="string">"songmid"</span>])</span><br><span class="line"></span><br><span class="line">        header = &#123;</span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.80 Safari/537.36'</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.get(url, headers=header)</span><br><span class="line">        r.encoding = <span class="string">"utf-8"</span></span><br><span class="line">        songitem=&#123;</span><br><span class="line">            <span class="string">"songword"</span>:item[<span class="string">"content"</span>],</span><br><span class="line">            <span class="string">"songname"</span>:item[<span class="string">"songname"</span>],</span><br><span class="line">            <span class="string">"singername"</span>:item[<span class="string">"singer"</span>][<span class="number">0</span>][<span class="string">"name"</span>],</span><br><span class="line">            <span class="string">"singermid"</span>:item[<span class="string">"singer"</span>][<span class="number">0</span>][<span class="string">"mid"</span>],</span><br><span class="line">            <span class="string">"songmid"</span>:item[<span class="string">"songmid"</span>],</span><br><span class="line">            <span class="string">"songimage"</span>:<span class="string">"https://y.gtimg.cn/music/photo_new/T002R300x300M000&#123;&#125;.jpg"</span>.format(item[<span class="string">"albummid"</span>]),</span><br><span class="line">            <span class="string">"songplay"</span>:r.json()[<span class="string">"req_0"</span>][<span class="string">"data"</span>][<span class="string">"sip"</span>][<span class="number">0</span>]+r.json()[<span class="string">"req_0"</span>][<span class="string">"data"</span>][<span class="string">"midurlinfo"</span>][<span class="number">0</span>][<span class="string">"purl"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">yield</span> songitem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存到数据库</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">savemysql</span><span class="params">(songitems)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> songitem <span class="keyword">in</span> songitems:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            sql = <span class="string">"INSERT INTO songs(songname,singername,content,\</span></span><br><span class="line"><span class="string">                   songplay,songimage,songmid,singermid) VALUES"</span> \</span><br><span class="line">                  <span class="string">"(\"&#123;songname&#125;\",\"&#123;singername&#125;\",\"&#123;content&#125;\",\"&#123;songplay&#125;\",\"&#123;songimage&#125;\",\"&#123;songmid&#125;\",\"&#123;singermid&#125;\")"</span>\</span><br><span class="line">                .format( songname=songitem[<span class="string">"songname"</span>].replace(<span class="string">'"'</span>,<span class="string">"'"</span>), singername=songitem[<span class="string">"singername"</span>].replace(<span class="string">'"'</span>,<span class="string">"'"</span>), content=songitem[<span class="string">"songword"</span>].replace(<span class="string">'"'</span>,<span class="string">"'"</span>),\</span><br><span class="line">                    songplay=songitem[<span class="string">"songplay"</span>].replace(<span class="string">'"'</span>,<span class="string">"'"</span>) ,songimage=songitem[<span class="string">"songimage"</span>].replace(<span class="string">'"'</span>,<span class="string">"'"</span>),songmid=songitem[<span class="string">"songmid"</span>].replace(<span class="string">'"'</span>,<span class="string">"'"</span>),singermid=songitem[<span class="string">"singermid"</span>].replace(<span class="string">'"'</span>,<span class="string">"'"</span>)</span><br><span class="line">                         )</span><br><span class="line">            cursor.execute(sql)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(sql)</span><br><span class="line">        <span class="comment"># 提交到数据库执行,这里切记要commit提交事务，否则无法完成保存。</span></span><br><span class="line">    db.commit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 主函数</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    songnames=getSongname()</span><br><span class="line">    <span class="keyword">for</span> songname <span class="keyword">in</span> songnames:</span><br><span class="line">        <span class="keyword">if</span> songname[<span class="string">"singer_name"</span>]==<span class="string">'周杰伦'</span>:</span><br><span class="line">            print()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(songname[<span class="string">"singer_mid"</span>])</span><br><span class="line">            print(songname[<span class="string">"singer_name"</span>])</span><br><span class="line">            print(songname[<span class="string">"singer_pic"</span>])</span><br><span class="line">            songdetail = getOnePage(songname[<span class="string">"singer_name"</span>])</span><br><span class="line">            songitems = parse(songdetail)</span><br><span class="line">            savemysql(songitems)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    index()</span><br><span class="line">    db.close()</span><br></pre></td></tr></table></figure><h1 id="代码中yield表示返回数据，大致意思与return相似，不过yield返回后代码并不终止，而是继续返回，直到循环结束，这时候接收到的为一个列表，多次返回组成的列表"><a href="#代码中yield表示返回数据，大致意思与return相似，不过yield返回后代码并不终止，而是继续返回，直到循环结束，这时候接收到的为一个列表，多次返回组成的列表" class="headerlink" title="代码中yield表示返回数据，大致意思与return相似，不过yield返回后代码并不终止，而是继续返回，直到循环结束，这时候接收到的为一个列表，多次返回组成的列表"></a>代码中yield表示返回数据，大致意思与return相似，不过yield返回后代码并不终止，而是继续返回，直到循环结束，这时候接收到的为一个列表，多次返回组成的列表</h1>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>python小总结</title>
      <link href="/2020/03/05/python%E5%B0%8F%E6%80%BB%E7%BB%93/"/>
      <url>/2020/03/05/python%E5%B0%8F%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="python小总结"><a href="#python小总结" class="headerlink" title="python小总结"></a>python小总结</h1><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>自定义模块有时候找不到路径</p><p>解决：  from .import uploadQiniu    </p><p>​              uploadQiniu.upLoadImage()</p><p>uploadQiniu：文件名</p><p>upLoadImage()：def模块</p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><p>有时候调用模块会发生：直接运行该模块X正常读取某路径文件夹下图片，但是另一个程序Y调用该模块X的方法会出现找不到该路径下的图片</p><p>解决：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 要上传文件的本地路径</span><br><span class="line">localfile = &apos;ciyun.jpg&apos;</span><br><span class="line"></span><br><span class="line"># 获取当前路径 G:\web_pro\ke4\t11.py</span><br><span class="line">curpath = os.path.realpath(__file__)</span><br><span class="line"># 获取当前路径的上级路径 G:\web_pro\ke4</span><br><span class="line">dirpath = os.path.dirname(curpath)</span><br><span class="line"># 连接路径 G:\web_pro\ke4\common\hello.xlsx</span><br><span class="line">testpath = os.path.join(dirpath, localfile)</span><br><span class="line">print(os.path.exists(testpath))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Django入门教程</title>
      <link href="/2020/03/05/Django%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2020/03/05/Django%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Django入门教程"><a href="#Django入门教程" class="headerlink" title="Django入门教程"></a>Django入门教程</h1><p>python import的时候，如果对面是def，则import到文件名filename，然后filename.def()获取方法。如果import到def，则通过def()调用方法………。。如果对面是class，则需要import filename.classname，引入到class名字。然后调用的时候，先实例化x=classname()，通过x再去调用内部方法</p><p>Django采用了MVC的软件设计模式，即模型M，视图V和控制器C</p><h2 id="1-结构目录"><a href="#1-结构目录" class="headerlink" title="1.结构目录"></a>1.结构目录</h2><figure class="image-box">                <img src="http://chen.cypeng.cn/20200214目录结构.png" alt="结构目录" title="" class="">                <p>结构目录</p>            </figure><p>bisheDjango</p><p>​        bisheDjango                                          项目的容器</p><p>​                _init__.py          一个空文件，告诉 Python 该目录是一个 Python 包</p><p>​                asgi.py             Django3新加，异步通信</p><p>​                setting.py        该 Django 项目的设置/配置。</p><p>​                urls.py             该 Django 项目的 URL 声明; 一份由 Django 驱动的网站”目录” </p><p>​                wsgi.py            一个 WSGI 兼容的 Web 服务器的入口，以便运行你的项目</p><p>​        templates               放html文件等</p><p>​        manage.py              一个实用的命令行工具，可让你以各种方式与该 Django 项目进行交互 </p><h2 id="2-尝试"><a href="#2-尝试" class="headerlink" title="2.尝试"></a>2.尝试</h2><p>在urls.py同级新建view.py内部写上</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"Hello world ! "</span>)</span><br></pre></td></tr></table></figure><p>在url内设置指向</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> view</span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># path('admin/', admin.site.urls),</span></span><br><span class="line">    path(<span class="string">'hello/'</span>,view.hello)</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>运行项目。访问<a href="http://127.0.0.1:8000/hello/" target="_blank" rel="noopener">http://127.0.0.1:8000/hello/</a>则会出现  Hello world !</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">path(route, view, kwargs=<span class="keyword">None</span>, name=<span class="keyword">None</span>)</span><br><span class="line"></span><br><span class="line">route: 字符串，表示 URL 规则，与之匹配的 URL 会执行对应的第二个参数 view。</span><br><span class="line">view: 用于执行与正则表达式匹配的 URL 请求。</span><br><span class="line">kwargs: 视图使用的字典类型的参数。</span><br><span class="line">name: 用来反向获取 URL。</span><br></pre></td></tr></table></figure><h2 id="3-Django-模板"><a href="#3-Django-模板" class="headerlink" title="3.Django 模板"></a>3.Django 模板</h2><p>模板是一个文本，用于分离文档的表现形式和内容</p><p>在templates下新建html文件  比如chen.html</p><p>在view.py中更改为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(request)</span>:</span></span><br><span class="line">    context          = &#123;&#125;</span><br><span class="line">    context[<span class="string">'hello'</span>] = <span class="string">'Hello World!'</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'chen.html'</span>, context)</span><br></pre></td></tr></table></figure><p>表示携带变量返回到chen.html。chen.html在templates下，这要在setting.py中指定模板位置。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'BACKEND'</span>: <span class="string">'django.template.backends.django.DjangoTemplates'</span>,</span><br><span class="line">        <span class="string">'DIRS'</span>: [os.path.join(BASE_DIR, <span class="string">'templates'</span>)],    //指定模板位置，这在Django3中会自动指定</span><br><span class="line">        <span class="string">'APP_DIRS'</span>: <span class="keyword">True</span>,</span><br></pre></td></tr></table></figure><h2 id="4-Django-模型"><a href="#4-Django-模型" class="headerlink" title="4.Django 模型"></a>4.Django 模型</h2><p>使用mysql数据库，下载驱动  pip install mysqlclient</p><p>在setting.py中修改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DATABASES = &#123;</span><br><span class="line">    <span class="string">'default'</span>: &#123;</span><br><span class="line">        <span class="string">'ENGINE'</span>: <span class="string">'django.db.backends.mysql'</span>,  <span class="comment"># 或者使用 mysql.connector.django</span></span><br><span class="line">        <span class="string">'NAME'</span>: <span class="string">'test'</span>,                        //数据库名</span><br><span class="line">        <span class="string">'USER'</span>: <span class="string">'test'</span>,                        // 一般为root</span><br><span class="line">        <span class="string">'PASSWORD'</span>: <span class="string">'test123'</span>,             </span><br><span class="line">        <span class="string">'HOST'</span>:<span class="string">'localhost'</span>,</span><br><span class="line">        <span class="string">'PORT'</span>:<span class="string">'3306'</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">添加了中文注释，所以你需要在 HelloWorld/settings.py 文件头部添加 <span class="comment"># -*- coding: UTF-8 -*-</span></span><br></pre></td></tr></table></figure><p>使用模型必须先创建app</p><p>在Pycharm中，没有可以创建app的图形化按钮，需要在下方的<code>Terminal</code>终端中输入命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp appname</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">然后在setting.py内加上app名称</span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    <span class="string">'django.contrib.auth'</span>,</span><br><span class="line">    <span class="string">'django.contrib.contenttypes'</span>,</span><br><span class="line">    <span class="string">'django.contrib.sessions'</span>,</span><br><span class="line">    <span class="string">'django.contrib.messages'</span>,</span><br><span class="line">    <span class="string">'django.contrib.staticfiles'</span>,</span><br><span class="line">    <span class="string">'app_01'</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><h2 id="5-在Navicat上创建好表之后怎么在Django项目中使用-必须有主键-查看操作https-www-jb51-net-article-145602-htm"><a href="#5-在Navicat上创建好表之后怎么在Django项目中使用-必须有主键-查看操作https-www-jb51-net-article-145602-htm" class="headerlink" title="5. 在Navicat上创建好表之后怎么在Django项目中使用  必须有主键      查看操作https://www.jb51.net/article/145602.htm"></a>5. 在Navicat上创建好表之后怎么在Django项目中使用  必须有主键      查看操作<a href="https://www.jb51.net/article/145602.htm" target="_blank" rel="noopener">https://www.jb51.net/article/145602.htm</a></h2><h3 id="1-pycharm中使用-python-manage-py-inspectdb-gt-models-py"><a href="#1-pycharm中使用-python-manage-py-inspectdb-gt-models-py" class="headerlink" title="1.pycharm中使用        python manage.py inspectdb &gt; models.py"></a>1.pycharm中使用        python manage.py inspectdb &gt; models.py</h3><p>   这样你就会发现在manage.py的同级目录下生成了一个models.py文件</p><p>使用这个models.py文件覆盖app中的models文件。</p><p>如果完成了以上的操作，生成的是一个不可修改/删除的models，修改models.py中meta class中的managed = True则可以去告诉django可以对数据库进行操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Allsongs</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    songname = models.CharField(max_length=<span class="number">255</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">True</span>)</span><br><span class="line">    singername = models.CharField(max_length=<span class="number">255</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">True</span>)</span><br><span class="line">    content = models.CharField(max_length=<span class="number">10000</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">True</span>)</span><br><span class="line">    songplay = models.CharField(max_length=<span class="number">255</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">True</span>)</span><br><span class="line">    songimage = models.CharField(max_length=<span class="number">255</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">True</span>)</span><br><span class="line">    songmid = models.CharField(max_length=<span class="number">255</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">True</span>)</span><br><span class="line">    singermid = models.CharField(max_length=<span class="number">255</span>, blank=<span class="keyword">True</span>, null=<span class="keyword">True</span>)</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span></span><br><span class="line">        managed = <span class="keyword">True</span></span><br><span class="line">        db_table = <span class="string">'allsongs'</span></span><br></pre></td></tr></table></figure><p>—————-检查model.py数据库表结构，有时候映射出来的有误，手动更改————-</p><h5 id="一、此时，我们再去使models-py和数据库进行同步"><a href="#一、此时，我们再去使models-py和数据库进行同步" class="headerlink" title="一、此时，我们再去使models.py和数据库进行同步"></a>一、此时，我们再去使models.py和数据库进行同步</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`python manage.py migrate`</span><br></pre></td></tr></table></figure><p>这个时候就已经大功告成了！</p><h5 id="二、一般映射后要这样执行：：：：-都不好使的时候：：：：：删除app（创建项目时创建的app）名字下的migrations下的除了init-py之外的文件-然后再执行"><a href="#二、一般映射后要这样执行：：：：-都不好使的时候：：：：：删除app（创建项目时创建的app）名字下的migrations下的除了init-py之外的文件-然后再执行" class="headerlink" title="二、一般映射后要这样执行：：：：::::::::::::::::都不好使的时候：：：：：删除app（创建项目时创建的app）名字下的migrations下的除了init.py之外的文件     然后再执行"></a>二、一般映射后要这样执行：：：：::::::::::::::::都不好使的时候：：：：：删除app（创建项目时创建的app）名字下的migrations下的除了init.py之外的文件     然后再执行</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations</span><br><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_22038327/article/details/87005518" target="_blank" rel="noopener">https://blog.csdn.net/qq_22038327/article/details/87005518</a></p><h3 id="2-操作数据库内容-增删查改https-www-cnblogs-com-yangmv-p-5327477-html"><a href="#2-操作数据库内容-增删查改https-www-cnblogs-com-yangmv-p-5327477-html" class="headerlink" title="2.操作数据库内容    增删查改https://www.cnblogs.com/yangmv/p/5327477.html#"></a>2.操作数据库内容    增删查改<a href="https://www.cnblogs.com/yangmv/p/5327477.html#" target="_blank" rel="noopener">https://www.cnblogs.com/yangmv/p/5327477.html#</a></h3><p>  查询后返回的是queryset类型，不能直接转dict或者json  可以使用queryresult.name获取内容</p><h5 id="dbControl-py"><a href="#dbControl-py" class="headerlink" title="dbControl.py"></a>dbControl.py</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">dbControl.py</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> JsonResponse</span><br><span class="line"><span class="keyword">from</span> app_01.models <span class="keyword">import</span> Allsongs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 数据库操作</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">selectAll</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="comment"># 初始化</span></span><br><span class="line">    response = <span class="string">""</span></span><br><span class="line">    response1 = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 通过objects这个模型管理器的all()获得所有数据行，相当于SQL中的SELECT * FROM</span></span><br><span class="line">    list = Allsongs.objects.all()</span><br><span class="line">    items=[]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> list:</span><br><span class="line">        item=&#123;&#125;</span><br><span class="line">        item[<span class="string">"id"</span>]=x.id</span><br><span class="line">        item[<span class="string">"songname"</span>]=x.songname</span><br><span class="line">        item[<span class="string">"singername"</span>]=x.singername</span><br><span class="line">        item[<span class="string">"content"</span>]=x.content</span><br><span class="line">        item[<span class="string">"songplay"</span>]=x.songplay</span><br><span class="line">        item[<span class="string">"songimage"</span>]=x.songimage</span><br><span class="line">        items.append(item)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> JsonResponse(items, safe=<span class="keyword">False</span>,json_dumps_params=&#123;<span class="string">'ensure_ascii'</span>:<span class="keyword">False</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-JsonResponse-查看参数介绍https-www-cnblogs-com-youleng-p-8692955-html"><a href="#3-JsonResponse-查看参数介绍https-www-cnblogs-com-youleng-p-8692955-html" class="headerlink" title="3.JsonResponse    查看参数介绍https://www.cnblogs.com/youleng/p/8692955.html"></a>3.JsonResponse    查看参数介绍<a href="https://www.cnblogs.com/youleng/p/8692955.html" target="_blank" rel="noopener">https://www.cnblogs.com/youleng/p/8692955.html</a></h3><p>需要引入 from django.http import JsonResponse</p><p>1.它的默认Content-Type 被设置为： application/json</p><p>2.第一个参数，data应该是一个字典类型，当 safe 这个参数被设置为：False ,那data可以填入任何能被转换为JSON格式的对象，比如list, tuple, set。 默认的safe 参数是 True. 如果你传入的data数据类型不是字典类型，那么它就会抛出 TypeError的异常。</p><p>3.json_dumps_params参数是一个字典,它将调用json.dumps()方法并将字典中的参数传入给该方法。因为json.dumps 序列化时对中文默认使用的ascii编码.想输出真正的中文需要指定ensure_ascii=False：</p><h3 id="4-跨域-参考博客-不起作用ctrl-f5多刷新几次。我按类似方法修改两个小时，没起作用，但是莫名其妙又起作用l"><a href="#4-跨域-参考博客-不起作用ctrl-f5多刷新几次。我按类似方法修改两个小时，没起作用，但是莫名其妙又起作用l" class="headerlink" title="4.跨域   参考博客      不起作用ctrl+f5多刷新几次。我按类似方法修改两个小时，没起作用，但是莫名其妙又起作用l"></a>4.跨域   <a href="https://blog.csdn.net/u011072037/article/details/90694032?utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">参考博客</a>      不起作用ctrl+f5多刷新几次。我按类似方法修改两个小时，没起作用，但是莫名其妙又起作用l</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">Django settings for bisheDjango project.</span><br><span class="line"></span><br><span class="line">Generated by &apos;django-admin startproject&apos; using Django 3.0.</span><br><span class="line"></span><br><span class="line">For more information on this file, see</span><br><span class="line">https://docs.djangoproject.com/en/3.0/topics/settings/</span><br><span class="line"></span><br><span class="line">For the full list of settings and their values, see</span><br><span class="line">https://docs.djangoproject.com/en/3.0/ref/settings/</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line"># Build paths inside the project like this: os.path.join(BASE_DIR, ...)</span><br><span class="line">BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Quick-start development settings - unsuitable for production</span><br><span class="line"># See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/</span><br><span class="line"></span><br><span class="line"># SECURITY WARNING: keep the secret key used in production secret!</span><br><span class="line">SECRET_KEY = &apos;=@e%^t&amp;--lz5u80p$$jv23kcv58i(#%=1ehk=qqf4r8*vl*)*$&apos;</span><br><span class="line"></span><br><span class="line"># SECURITY WARNING: don&apos;t run with debug turned on in production!</span><br><span class="line">DEBUG = True</span><br><span class="line"></span><br><span class="line">ALLOWED_HOSTS = []</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Application definition</span><br><span class="line"></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line"></span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">    &apos;app_01&apos;,</span><br><span class="line">    &apos;corsheaders&apos;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">MIDDLEWARE = [</span><br><span class="line">    &apos;django.middleware.security.SecurityMiddleware&apos;,</span><br><span class="line">    &apos;django.contrib.sessions.middleware.SessionMiddleware&apos;,</span><br><span class="line"></span><br><span class="line">    &apos;corsheaders.middleware.CorsMiddleware&apos;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &apos;django.middleware.common.CommonMiddleware&apos;,</span><br><span class="line">    &apos;django.middleware.csrf.CsrfViewMiddleware&apos;,</span><br><span class="line">    &apos;django.contrib.auth.middleware.AuthenticationMiddleware&apos;,</span><br><span class="line">    &apos;django.contrib.messages.middleware.MessageMiddleware&apos;,</span><br><span class="line">    &apos;django.middleware.clickjacking.XFrameOptionsMiddleware&apos;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">ROOT_URLCONF = &apos;bisheDjango.urls&apos;</span><br><span class="line"></span><br><span class="line">TEMPLATES = [</span><br><span class="line">    &#123;</span><br><span class="line">        &apos;BACKEND&apos;: &apos;django.template.backends.django.DjangoTemplates&apos;,</span><br><span class="line">        &apos;DIRS&apos;: [os.path.join(BASE_DIR, &apos;templates&apos;)],</span><br><span class="line">        &apos;APP_DIRS&apos;: True,</span><br><span class="line">        &apos;OPTIONS&apos;: &#123;</span><br><span class="line">            &apos;context_processors&apos;: [</span><br><span class="line">                &apos;django.template.context_processors.debug&apos;,</span><br><span class="line">                &apos;django.template.context_processors.request&apos;,</span><br><span class="line">                &apos;django.contrib.auth.context_processors.auth&apos;,</span><br><span class="line">                &apos;django.contrib.messages.context_processors.messages&apos;,</span><br><span class="line">            ],</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">WSGI_APPLICATION = &apos;bisheDjango.wsgi.application&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Database</span><br><span class="line"># https://docs.djangoproject.com/en/3.0/ref/settings/#databases</span><br><span class="line"></span><br><span class="line">DATABASES = &#123;</span><br><span class="line">    &apos;default&apos;: &#123;</span><br><span class="line">        &apos;ENGINE&apos;: &apos;django.db.backends.mysql&apos;,</span><br><span class="line">        &apos;NAME&apos;: &apos;bishe&apos;,</span><br><span class="line">        &apos;USER&apos;: &apos;root&apos;,</span><br><span class="line">        &apos;PASSWORD&apos;: &apos;chen714611&apos;,</span><br><span class="line">        &apos;HOST&apos;:&apos;localhost&apos;,</span><br><span class="line">        &apos;PORT&apos;:&apos;3306&apos;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Password validation</span><br><span class="line"># https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators</span><br><span class="line"></span><br><span class="line">AUTH_PASSWORD_VALIDATORS = [</span><br><span class="line">    &#123;</span><br><span class="line">        &apos;NAME&apos;: &apos;django.contrib.auth.password_validation.UserAttributeSimilarityValidator&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &apos;NAME&apos;: &apos;django.contrib.auth.password_validation.MinimumLengthValidator&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &apos;NAME&apos;: &apos;django.contrib.auth.password_validation.CommonPasswordValidator&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        &apos;NAME&apos;: &apos;django.contrib.auth.password_validation.NumericPasswordValidator&apos;,</span><br><span class="line">    &#125;,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Internationalization</span><br><span class="line"># https://docs.djangoproject.com/en/3.0/topics/i18n/</span><br><span class="line"></span><br><span class="line">LANGUAGE_CODE = &apos;en-us&apos;</span><br><span class="line"></span><br><span class="line">TIME_ZONE = &apos;UTC&apos;</span><br><span class="line"></span><br><span class="line">USE_I18N = True</span><br><span class="line"></span><br><span class="line">USE_L10N = True</span><br><span class="line"></span><br><span class="line">USE_TZ = True</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Static files (CSS, JavaScript, Images)</span><br><span class="line"># https://docs.djangoproject.com/en/3.0/howto/static-files/</span><br><span class="line"></span><br><span class="line">STATIC_URL = &apos;/static/&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 跨域</span><br><span class="line">CORS_ALLOW_CREDENTIALS = True</span><br><span class="line">CORS_ORIGIN_ALLOW_ALL = True</span><br><span class="line">CORS_ALLOW_METHODS = (</span><br><span class="line">    &apos;DELETE&apos;,</span><br><span class="line">    &apos;GET&apos;,</span><br><span class="line">    &apos;OPTIONS&apos;,</span><br><span class="line">    &apos;PATCH&apos;,</span><br><span class="line">    &apos;POST&apos;,</span><br><span class="line">    &apos;PUT&apos;,</span><br><span class="line">    &apos;VIEW&apos;,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">CORS_ALLOW_HEADERS = (</span><br><span class="line">    &apos;XMLHttpRequest&apos;,</span><br><span class="line">    &apos;X_FILENAME&apos;,</span><br><span class="line">    &apos;accept-encoding&apos;,</span><br><span class="line">    &apos;authorization&apos;,</span><br><span class="line">    &apos;content-type&apos;,</span><br><span class="line">    &apos;dnt&apos;,</span><br><span class="line">    &apos;origin&apos;,</span><br><span class="line">    &apos;user-agent&apos;,</span><br><span class="line">    &apos;x-csrftoken&apos;,</span><br><span class="line">    &apos;x-requested-with&apos;,</span><br><span class="line">    &apos;Pragma&apos;,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"># #部署到云服务上必备</span><br><span class="line"># ALLOWED_HOSTS = [&apos;*&apos;]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Django </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>词云显示</title>
      <link href="/2020/03/05/%E8%AF%8D%E4%BA%91%E6%98%BE%E7%A4%BA/"/>
      <url>/2020/03/05/%E8%AF%8D%E4%BA%91%E6%98%BE%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="词云显示"><a href="#词云显示" class="headerlink" title="词云显示"></a>词云显示</h1><p><a href="https://blog.csdn.net/No1Brother_Jian/article/details/90600160?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">参考博客</a></p><h2 id="1-根据文本显示词云示例：generate-text-根据文本生成词云"><a href="#1-根据文本显示词云示例：generate-text-根据文本生成词云" class="headerlink" title="1.根据文本显示词云示例：generate(text)  //根据文本生成词云"></a>1.根据文本显示词云示例：generate(text)  //根据文本生成词云</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">GetWordCloud</span><span class="params">()</span>:</span></span><br><span class="line">   path_img = <span class="string">"ciyun.JPG"</span></span><br><span class="line">   <span class="keyword">with</span> open(<span class="string">'chen.txt'</span>, encoding=<span class="string">'UTF-8'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">       text_from_file_with_apath = fp.read()</span><br><span class="line">   background_image = np.array(Image.open(path_img))</span><br><span class="line">   <span class="comment"># 结巴分词，生成字符串，如果不通过分词，无法直接生成正确的中文词云,感兴趣的朋友可以去查一下，有多种分词模式</span></span><br><span class="line">   <span class="comment">#Python join() 方法用于将序列中的元素以指定的字符连接生成一个新的字符串。</span></span><br><span class="line">   cut_text = <span class="string">" "</span>.join(jieba.cut(text_from_file_with_apath))</span><br><span class="line"></span><br><span class="line">   wordcloud = WordCloud(</span><br><span class="line">       <span class="comment"># 设置字体，不然会出现口字乱码，文字的路径是电脑的字体一般路径，可以换成别的</span></span><br><span class="line">       font_path=<span class="string">"STXINWEI.TTF"</span>,</span><br><span class="line">       background_color=<span class="string">"white"</span>,</span><br><span class="line">       <span class="comment"># mask参数=图片背景，必须要写上，另外有mask参数再设定宽高是无效的</span></span><br><span class="line">       mask=background_image).generate(cut_text)</span><br><span class="line">   <span class="comment"># 生成颜色值</span></span><br><span class="line">   image_colors = ImageColorGenerator(background_image)</span><br><span class="line">   <span class="comment"># 下面代码表示显示图片</span></span><br><span class="line">   plt.imshow(wordcloud.recolor(color_func=image_colors), interpolation=<span class="string">"bilinear"</span>)</span><br><span class="line">   plt.axis(<span class="string">"off"</span>)</span><br><span class="line">   plt.show()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">   GetWordCloud()</span><br></pre></td></tr></table></figure><h2 id="2-根据词频显示-generate-from-frequencies-根据词频生成词云"><a href="#2-根据词频显示-generate-from-frequencies-根据词频生成词云" class="headerlink" title="2.根据词频显示  generate_from_frequencies //根据词频生成词云"></a>2.根据词频显示  generate_from_frequencies //根据词频生成词云</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> wordcloud <span class="keyword">import</span> WordCloud, ImageColorGenerator</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_words</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'chen.txt'</span>, encoding=<span class="string">'UTF-8'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        text_from_file_with_apath = fp.read()</span><br><span class="line">    <span class="comment">#进行分词</span></span><br><span class="line">    list = jieba.cut(text_from_file_with_apath)</span><br><span class="line">    c = Counter()</span><br><span class="line"></span><br><span class="line">    <span class="comment">#给分词定义条件进行筛选统计词频</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> list:</span><br><span class="line">        <span class="keyword">if</span> len(x) &gt; <span class="number">1</span> <span class="keyword">and</span> x != <span class="string">'\r\n'</span>:</span><br><span class="line">            c[x] += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#打开一个文本将统计好的词频存放进去</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">r'cipin.txt'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> fw:</span><br><span class="line">        <span class="keyword">for</span> (k, v) <span class="keyword">in</span> c.most_common():</span><br><span class="line">            fw.write(k + <span class="string">' '</span> + str(v) + <span class="string">'\n'</span>)</span><br><span class="line">        fw.close()</span><br><span class="line">    <span class="comment">#绘制词云图</span></span><br><span class="line">    path_img = <span class="string">"ciyun.jpg"</span></span><br><span class="line">    background_image = np.array(Image.open(path_img))</span><br><span class="line">    wc = WordCloud(</span><br><span class="line">       <span class="comment"># 设置字体，不然会出现口字乱码，文字的路径是电脑的字体一般路径，可以换成别的</span></span><br><span class="line">       font_path=<span class="string">"STXINWEI.TTF"</span>,</span><br><span class="line">       background_color=<span class="string">"white"</span>,</span><br><span class="line">       <span class="comment"># mask参数=图片背景，必须要写上，另外有mask参数再设定宽高是无效的</span></span><br><span class="line">       mask=background_image).generate_from_frequencies(c)</span><br><span class="line">    plt.imshow(wc)</span><br><span class="line">    <span class="comment"># 生成颜色值</span></span><br><span class="line">    <span class="comment"># image_colors = ImageColorGenerator(background_image)</span></span><br><span class="line">    <span class="comment"># 下面代码表示显示图片，按背景图颜色显示</span></span><br><span class="line">    <span class="comment"># plt.imshow(wc.recolor(color_func=image_colors), interpolation="bilinear")</span></span><br><span class="line">    plt.axis(<span class="string">'off'</span>) <span class="comment">#不带坐标</span></span><br><span class="line">    plt.show()  <span class="comment">#没有该句不显示</span></span><br><span class="line">    wc.to_file(<span class="string">'generateCiyun.png'</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    get_words()</span><br></pre></td></tr></table></figure><h2 id="总结两个对比"><a href="#总结两个对比" class="headerlink" title="总结两个对比"></a>总结两个对比</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><p>对文本绘制词云图  cut_text = “ “.join(jieba.cut(text_from_file_with_apath))   需要对文本分词后操作</p><p>对词频绘制词云图   list = jieba.cut(text_from_file_with_apath)         不需要对文本分词后操作</p><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><h5 id="对文本绘制词云图"><a href="#对文本绘制词云图" class="headerlink" title="对文本绘制词云图"></a>对文本绘制词云图</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cut_text = <span class="string">" "</span>.join(jieba.cut(text_from_file_with_apath)) </span><br><span class="line">WordCloud.generate(cut_text )</span><br></pre></td></tr></table></figure><h5 id="对词频绘制词云图"><a href="#对词频绘制词云图" class="headerlink" title="对词频绘制词云图"></a>对词频绘制词云图</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">c.Counter()</span><br><span class="line"><span class="comment">#给分词定义条件进行筛选统计词频</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> list:</span><br><span class="line">    <span class="keyword">if</span> len(x) &gt; <span class="number">1</span> <span class="keyword">and</span> x != <span class="string">'\r\n'</span>:</span><br><span class="line">        c[x] += <span class="number">1</span></span><br><span class="line">WordCloud.generate_from_frequencies(c)</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> wordcloud = WordCloud(</span><br><span class="line">       <span class="comment"># 设置字体，不然会出现口字乱码，文字的路径是电脑的字体一般路径，可以换成别的</span></span><br><span class="line">       font_path=<span class="string">"STXINWEI.TTF"</span>,</span><br><span class="line">       background_color=<span class="string">"white"</span>,</span><br><span class="line">       <span class="comment"># mask参数=图片背景，必须要写上，另外有mask参数再设定宽高是无效的</span></span><br><span class="line">       mask=background_image).generate(cut_text)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成颜色值</span></span><br><span class="line">image_colors = ImageColorGenerator(background_image)</span><br><span class="line"><span class="comment"># 下面代码表示显示图片，按背景图颜色显示</span></span><br><span class="line"><span class="comment"># plt.imshow(wordcloud.recolor(color_func=image_colors), interpolation="bilinear")</span></span><br><span class="line">plt.imshow(wordcloud)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>flutter前后端通信坑点</title>
      <link href="/2019/12/01/flutter%E5%89%8D%E5%90%8E%E7%AB%AF%E9%80%9A%E4%BF%A1%E5%9D%91%E7%82%B9/"/>
      <url>/2019/12/01/flutter%E5%89%8D%E5%90%8E%E7%AB%AF%E9%80%9A%E4%BF%A1%E5%9D%91%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="前后端通信遇到的错误总结"><a href="#前后端通信遇到的错误总结" class="headerlink" title="前后端通信遇到的错误总结"></a>前后端通信遇到的错误总结</h1><h2 id="1-我们通常返回的格式"><a href="#1-我们通常返回的格式" class="headerlink" title="1.我们通常返回的格式"></a>1.我们通常返回的格式</h2><figure class="image-box">                <img src="http://chen.cypeng.cn/2019121%E5%90%8E%E7%AB%AF%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE.png" alt="" title="" class="">                <p></p>            </figure><p>如上图所示，是json字符串，在每一个属性名和属性值上都有双引号</p><h2 id="2-我们使用flutter，dio接收前端数据"><a href="#2-我们使用flutter，dio接收前端数据" class="headerlink" title="2.我们使用flutter，dio接收前端数据"></a>2.我们使用flutter，dio接收前端数据</h2><h3 id="2-1一条数据时"><a href="#2-1一条数据时" class="headerlink" title="2.1一条数据时"></a>2.1一条数据时</h3><figure class="image-box">                <img src="http://chen.cypeng.cn/2019121%E5%8D%95%E6%9D%A1%E6%95%B0%E6%8D%AE.png" alt="" title="" class="">                <p></p>            </figure><p>如图所示，response.data的数据没有双引号，但是其他类型直接输出有双引号，这时，有双引号的数据可直接通过json.decode解码成json对象，如list或者map。</p><h3 id="2-2多条数据时"><a href="#2-2多条数据时" class="headerlink" title="2.2多条数据时"></a>2.2多条数据时</h3><figure class="image-box">                <img src="http://chen.cypeng.cn/2019121%E5%A4%9A%E6%9D%A1%E6%95%B0%E6%8D%AE.png" alt="" title="" class="">                <p></p>            </figure><p>如图所示，几乎全是没有加引号的json字符串，但是此时仍是字符串，不能进行操作，而使用与单条数据一样的json.decode解码则会报错。如下图</p><figure class="image-box">                <img src="http://chen.cypeng.cn/2019121%E5%A4%9A%E6%9D%A1%E6%95%B0%E6%8D%AE%E5%8F%91%E7%94%9F%E9%94%99%E8%AF%AF.png" alt="" title="" class="">                <p></p>            </figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>虽然后端返回的json字符串仍然有双引号，但是flutter dio接收时，可能会没有，比如多条数据需要转为list时，这时候可以先使用json.encode先将json字符串加上双引号，然后再进行解码，如下图</p><figure class="image-box">                <img src="http://chen.cypeng.cn/2019121%E5%A4%9A%E6%9D%A1%E6%95%B0%E6%8D%AE.png" alt="" title="" class="">                <p></p>            </figure>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> flutter </tag>
            
            <tag> dio </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>pytorch深度学习第一次入门</title>
      <link href="/2019/11/26/pytorch%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%85%A5%E9%97%A8/"/>
      <url>/2019/11/26/pytorch%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch第一次学习"><a href="#pytorch第一次学习" class="headerlink" title="pytorch第一次学习"></a>pytorch第一次学习</h1>]]></content>
      
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jquery使用append()追加元素事件失效</title>
      <link href="/2019/01/15/jquery%E4%BD%BF%E7%94%A8append-%E8%BF%BD%E5%8A%A0%E5%85%83%E7%B4%A0%E4%BA%8B%E4%BB%B6%E5%A4%B1%E6%95%88/"/>
      <url>/2019/01/15/jquery%E4%BD%BF%E7%94%A8append-%E8%BF%BD%E5%8A%A0%E5%85%83%E7%B4%A0%E4%BA%8B%E4%BB%B6%E5%A4%B1%E6%95%88/</url>
      
        <content type="html"><![CDATA[<h1 id="jquery使用append-追加元素事件失效"><a href="#jquery使用append-追加元素事件失效" class="headerlink" title="jquery使用append()追加元素事件失效"></a>jquery使用append()追加元素事件失效</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">"&lt;span class=\"ulli\"  style=\"list-style-type: none;display: flex;justify-content: space-around; border: 1xp solid black;\"&gt;&lt;li&gt;"</span></span><br><span class="line">+res[i].clientName+<span class="string">"&lt;/li&gt;&lt;li&gt;"</span></span><br><span class="line">+res[i].clientId+<span class="string">"&lt;/li&gt;&lt;li&gt;"</span></span><br><span class="line">+res[i].tel+<span class="string">"&lt;/li&gt;&lt;li&gt;"</span></span><br><span class="line">+res[i].address+<span class="string">"&lt;/li&gt;&lt;li class=\"extra\"&gt;"</span></span><br><span class="line">+res[i].startDate+<span class="string">"&lt;/li&gt;&lt;li&gt;"</span></span><br><span class="line">+res[i].foregift+<span class="string">"&lt;/li&gt;&lt;li&gt;"</span></span><br><span class="line">+res[i].bucketCnt+<span class="string">"&lt;/li&gt;&lt;li&gt;"</span></span><br><span class="line">+res[i].sendedCnt+<span class="string">"&lt;/li&gt;&lt;/span&gt;"</span></span><br><span class="line">$(<span class="string">".list"</span>).append(str)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="append-追加元素，这时候绑定事件，三种方法会失效"><a href="#append-追加元素，这时候绑定事件，三种方法会失效" class="headerlink" title="append()追加元素，这时候绑定事件，三种方法会失效"></a>append()追加元素，这时候绑定事件，三种方法会失效</h2><h3 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"span"</span>).on(<span class="string">"click"</span>,<span class="string">".ulli"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).css(<span class="string">"background"</span>,<span class="string">"darkred"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">"span"</span>).on(<span class="string">"mouseout"</span>,<span class="string">".ulli"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).css(<span class="string">"background"</span>,<span class="string">"white"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="2"><a href="#2" class="headerlink" title="2."></a>2.</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".ulli"</span>).on(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).css(<span class="string">"background"</span>,<span class="string">"darkred"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">".ulli"</span>).on(<span class="string">"mouseout"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).css(<span class="string">"background"</span>,<span class="string">"white"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">".ulli"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).css(<span class="string">"background"</span>,<span class="string">"darkred"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">".ulli"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).css(<span class="string">"background"</span>,<span class="string">"white"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="只能使用以下方法"><a href="#只能使用以下方法" class="headerlink" title="只能使用以下方法"></a>只能使用以下方法</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).on(<span class="string">"click"</span>,<span class="string">".ulli"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).css(<span class="string">"background"</span>,<span class="string">"darkred"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">"mouseout"</span>,<span class="string">".ulli"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">$(<span class="keyword">this</span>).css(<span class="string">"background"</span>,<span class="string">"white"</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h5 id="第一个元素必须是document"><a href="#第一个元素必须是document" class="headerlink" title="第一个元素必须是document"></a>第一个元素必须是document</h5>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jquery </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>springMVC json数据交互</title>
      <link href="/2019/01/11/springMVC-json%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92/"/>
      <url>/2019/01/11/springMVC-json%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92/</url>
      
        <content type="html"><![CDATA[<h1 id="spring-mvc与前端进行数据交互"><a href="#spring-mvc与前端进行数据交互" class="headerlink" title="spring mvc与前端进行数据交互"></a>spring mvc与前端进行数据交互</h1><h2 id="1-最直接的方法-gson"><a href="#1-最直接的方法-gson" class="headerlink" title="1.最直接的方法 gson"></a>1.最直接的方法 gson</h2><p>gson的使用，参考下方链接</p><p><a href="https://blog.csdn.net/lk_blog/article/details/7685190" target="_blank" rel="noopener">https://blog.csdn.net/lk_blog/article/details/7685190</a></p><h2 id="2-通过注解-Responsebody返回json"><a href="#2-通过注解-Responsebody返回json" class="headerlink" title="2.通过注解@Responsebody返回json"></a>2.通过注解@Responsebody返回json</h2><h3 id="2-1-ResponseBody-返回对象"><a href="#2-1-ResponseBody-返回对象" class="headerlink" title="2.1 @ResponseBody 返回对象"></a>2.1 @ResponseBody 返回对象</h3><h5 id="导入3个jar包"><a href="#导入3个jar包" class="headerlink" title="导入3个jar包"></a>导入3个jar包</h5><p>jackson-annotations-2.9.6.jar   ——json转换注解包</p><p>jackson-core-2.9.4.jar  ——-json转换核心包</p><p>jackson-databind-2.9.4.jar   —–json转换的数据绑定包</p><h5 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h5><figure class="image-box">                <img src="http://chen.cypeng.cn/Spring%20json1.png" alt="" title="" class="">                <p></p>            </figure><p>这时候运行会报错 No converter found for return value of type: class java.util.ArrayList；</p><h5 id="百度查到需要改spring-servlet-xml文件"><a href="#百度查到需要改spring-servlet-xml文件" class="headerlink" title="百度查到需要改spring-servlet.xml文件"></a>百度查到需要改spring-servlet.xml文件</h5><figure class="image-box">                <img src="http://chen.cypeng.cn/Spring%20json2.png" alt="" title="" class="">                <p></p>            </figure><p>加入这条语句即可正常返回json数据</p><p>查到别的博客解释：转换json时：第一种方法使用&lt;mvc:annotation-driven /&gt;注解驱动配置json转换器，或者第二种方法</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span>   <span class="tag">&lt;<span class="name">mvc:message-converters</span>&gt;</span><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.StringHttpMessageConverter"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"</span>/&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">mvc:message-converters</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br></pre></td></tr></table></figure><p>追加:1.&lt;mvc:annotation-driven /&gt;自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,是spring MVC为@Controllers分发请求所必须的，即解决了@Controller注解使用的前提配置，是一种简写形式，完全可以手动配置替代这种简写形式，简写形式可以让初学都快速应用默认配置方案。</p><p><strong>参考博客</strong><a href="https://wangchangchung.github.io/2018/04/26/No-converter-found-for-return-value-of-type-xxx-%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3/" target="_blank" rel="noopener">https://wangchangchung.github.io/2018/04/26/No-converter-found-for-return-value-of-type-xxx-%E5%BC%82%E5%B8%B8%E8%A7%A3%E5%86%B3/</a></p><h3 id="2-2-ResponseBody返回一个字符串"><a href="#2-2-ResponseBody返回一个字符串" class="headerlink" title="2.2 @ResponseBody返回一个字符串"></a>2.2 @ResponseBody返回一个字符串</h3><figure class="image-box">                <img src="http://chen.cypeng.cn/Spring%20json3-1.png" alt="" title="" class="">                <p></p>            </figure><p>返回字符串必须设置字符编码，在@RequestMapping注释里加上produces=”application/json;charset=utf-8”</p><p>。否则会中文会出现“?”</p><h2 id="3-RequestBody将请求的json数据绑定到形参"><a href="#3-RequestBody将请求的json数据绑定到形参" class="headerlink" title="3.@RequestBody将请求的json数据绑定到形参"></a>3.@RequestBody将请求的json数据绑定到形参</h2><p>public String login1(@RequestBody Person user) {</p><p>}</p><h2 id="4-json返回值去掉null空值"><a href="#4-json返回值去掉null空值" class="headerlink" title="4.json返回值去掉null空值"></a>4.json返回值去掉null空值</h2><h5 id="有时候我们只想查询pojo类中的一部分属性值，但是这时候将结果集对象转换成json，没有查询的属性值就对应成null"><a href="#有时候我们只想查询pojo类中的一部分属性值，但是这时候将结果集对象转换成json，没有查询的属性值就对应成null" class="headerlink" title="有时候我们只想查询pojo类中的一部分属性值，但是这时候将结果集对象转换成json，没有查询的属性值就对应成null"></a>有时候我们只想查询pojo类中的一部分属性值，但是这时候将结果集对象转换成json，没有查询的属性值就对应成null</h5><p>[{“bookId”:”1011”,”bookName”:”java程序设计”,”author”:”刘备”,”price”:null,”press”:null,”kind”:null,”cnt”:null},{“bookId”:”1012”,”bookName”:”Html开发”,”author”:”曹操”,”price”:null,”press”:null,”kind”:null,”cnt”:null},{“bookId”:”1013”,”bookName”:”旅游百科”,”author”:”孙权”,”price”:null,”press”:null,”kind”:null,”cnt”:null}]</p><h5 id="这时候我们可以在pojo类前添加注解-JsonInclude-value-JsonInclude-Include-NON-NULL"><a href="#这时候我们可以在pojo类前添加注解-JsonInclude-value-JsonInclude-Include-NON-NULL" class="headerlink" title="这时候我们可以在pojo类前添加注解@JsonInclude(value=JsonInclude.Include.NON_NULL)"></a>这时候我们可以在pojo类前添加注解@JsonInclude(value=JsonInclude.Include.NON_NULL)</h5><h5 id="它可以去掉返回值为空的json数据忽略"><a href="#它可以去掉返回值为空的json数据忽略" class="headerlink" title="它可以去掉返回值为空的json数据忽略"></a>它可以去掉返回值为空的json数据忽略</h5><p>[{“bookId”:”1011”,”bookName”:”java程序设计”,”author”:”刘备”},{“bookId”:”1012”,”bookName”:”Html开发”,”author”:”曹操”},{“bookId”:”1013”,”bookName”:”旅游百科”,”author”:”孙权”}]</p><h5 id="添加位置"><a href="#添加位置" class="headerlink" title="添加位置"></a>添加位置</h5><p><img src="http://chen.cypeng.cn/Spring%20json4.png" alt=""></p><h4 id="5-json-返回前端Date类型数据变成毫秒数"><a href="#5-json-返回前端Date类型数据变成毫秒数" class="headerlink" title="5.json 返回前端Date类型数据变成毫秒数"></a>5.json 返回前端Date类型数据变成毫秒数</h4><p>在date数据类型的 get方法前加上注解@JsonFormat(pattern=”yyyy-MM-dd HH:mm:ss”,timezone = “GMT+8”)</p><figure class="image-box">                <img src="http://chen.cypeng.cn/Spring%20json5.png" alt="" title="" class="">                <p></p>            </figure>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring mvc </tag>
            
            <tag> json </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>跨域请求解决方案</title>
      <link href="/2019/01/10/%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2019/01/10/%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="跨域请求"><a href="#跨域请求" class="headerlink" title="跨域请求"></a>跨域请求</h1><h2 id="什么叫跨域"><a href="#什么叫跨域" class="headerlink" title="什么叫跨域"></a>什么叫跨域</h2><h5 id="当前页面和请求页面协议不同、域名不同、端口不同、一个使用服务器ip地址，一个使用域名。这些都会导致跨域请求"><a href="#当前页面和请求页面协议不同、域名不同、端口不同、一个使用服务器ip地址，一个使用域名。这些都会导致跨域请求" class="headerlink" title="当前页面和请求页面协议不同、域名不同、端口不同、一个使用服务器ip地址，一个使用域名。这些都会导致跨域请求"></a>当前页面和请求页面协议不同、域名不同、端口不同、一个使用服务器ip地址，一个使用域名。这些都会导致跨域请求</h5><p>http、https属于协议不同</p><p>chenyuepeng.cn和cheny.cn属于域名不同</p><p>chenyuepeng.cn:80/和chenyuepeng.cn:8080属于与端口不同</p><p><a href="http://47.256.xx.xx和http://chenyuepeng.cn虽然域名指向该服务器，但是也属于跨域；同理localhost和127.0.0.1也属于跨域" target="_blank" rel="noopener">http://47.256.xx.xx和http://chenyuepeng.cn虽然域名指向该服务器，但是也属于跨域；同理localhost和127.0.0.1也属于跨域</a></p><figure class="image-box">                <img src="http://chen.cypeng.cn/%E8%B7%A8%E5%9F%9F.png" alt="" title="" class="">                <p></p>            </figure><h5 id="java后端解决方案"><a href="#java后端解决方案" class="headerlink" title="java后端解决方案"></a>java后端解决方案</h5><p>建立一个过滤器</p><p>新建一个类CorsFilter，实例化javax.servlet.Filter接口</p><p><a href="http://chen.cypeng.cn/%E8%B7%A8%E5%9F%9FCorsFilter.java" target="_blank" rel="noopener">CorsFilter文件内容链接</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CorsFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest arg0, ServletResponse arg1, FilterChain arg2)</span></span></span><br><span class="line"><span class="function"><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"> HttpServletResponse response = (HttpServletResponse) arg1;</span><br><span class="line">        HttpServletRequest request = (HttpServletRequest) arg0;</span><br><span class="line"> </span><br><span class="line">        String origin = request.getHeader(<span class="string">"Origin"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Origin"</span>, origin);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Methods"</span>, <span class="string">"POST, GET, OPTIONS, DELETE"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Max-Age"</span>, <span class="string">"3600"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Headers"</span>, <span class="string">"x-requested-with,Authorization"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Access-Control-Allow-Credentials"</span>, <span class="string">"true"</span>);</span><br><span class="line">        String method = request.getMethod();</span><br><span class="line">        <span class="keyword">if</span>(method.equalsIgnoreCase(<span class="string">"OPTIONS"</span>))&#123;</span><br><span class="line">        arg1.getOutputStream().write(<span class="string">"Success"</span>.getBytes(<span class="string">"utf-8"</span>));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        arg2.doFilter(arg0, arg1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig arg0)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="在web-xml文件里配置该接口"><a href="#在web-xml文件里配置该接口" class="headerlink" title="在web.xml文件里配置该接口"></a>在web.xml文件里配置该接口</h5><p><a href="http://chen.cypeng.cn/%E8%B7%A8%E5%9F%9Fweb.xml" target="_blank" rel="noopener">web.xml文件链接</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>corsFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- 控制器路径--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>CorsFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>corsFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 过滤所有--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这时候即可实现过滤</p><p><a href="https://blog.csdn.net/qq_39403545/article/details/82116121" target="_blank" rel="noopener">参考文章</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java web </tag>
            
            <tag> 跨域 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Mybatis延迟加载</title>
      <link href="/2019/01/09/Mybatis%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD/"/>
      <url>/2019/01/09/Mybatis%E5%BB%B6%E8%BF%9F%E5%8A%A0%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h1 id="Mybatis延迟加载"><a href="#Mybatis延迟加载" class="headerlink" title="Mybatis延迟加载"></a>Mybatis延迟加载</h1><h3 id="mybatis核心配置文件mybatis-config-xml"><a href="#mybatis核心配置文件mybatis-config-xml" class="headerlink" title="mybatis核心配置文件mybatis-config.xml"></a>mybatis核心配置文件mybatis-config.xml</h3><p><a href="http://chen.cypeng.cn/Mybatis_mybatis-config.xml" target="_blank" rel="noopener">mybatis-config.xml文件</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--配置全局属性--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"logImpl"</span> <span class="attr">value</span>=<span class="string">"LOG4J"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--下划线转驼峰--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"mapUnderscoreToCamelCase"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"com.lly.pojo.Comment"</span> <span class="attr">alias</span>=<span class="string">"_Comment"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>只需要在xml文件里加入settings标签及其中内容即可</strong></p><h3 id="延迟加载原理"><a href="#延迟加载原理" class="headerlink" title="延迟加载原理"></a>延迟加载原理</h3><p><strong>当我们使用多表联合查询时常使用延迟加载提高查询效率</strong></p><p><strong>总结稍后加上</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo博客的上传</title>
      <link href="/2019/01/08/hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%8A%E4%BC%A0/"/>
      <url>/2019/01/08/hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="编辑软件：Typora百度去官网即可安装（免费且中文版）"><a href="#编辑软件：Typora百度去官网即可安装（免费且中文版）" class="headerlink" title="编辑软件：Typora百度去官网即可安装（免费且中文版）"></a>编辑软件：Typora百度去官网即可安装（免费且中文版）</h2><h3 id="在hexo的文件下右键Git-Bash-Here直接进入部署路径下"><a href="#在hexo的文件下右键Git-Bash-Here直接进入部署路径下" class="headerlink" title="在hexo的文件下右键Git Bash Here直接进入部署路径下"></a>在hexo的文件下右键Git Bash Here直接进入部署路径下</h3><h3 id="hexo-new-“xxxxx”-——-新建一个文章"><a href="#hexo-new-“xxxxx”-——-新建一个文章" class="headerlink" title="==hexo new “xxxxx”==——-新建一个文章"></a>==hexo new “xxxxx”==——-新建一个文章</h3><h3 id="在Typora软件中打开-source-posts文件夹编辑博客"><a href="#在Typora软件中打开-source-posts文件夹编辑博客" class="headerlink" title="在Typora软件中打开/source/_posts文件夹编辑博客"></a>在Typora软件中打开/source/_posts文件夹编辑博客</h3><h3 id="hexo-clean-——-清除缓存文件-和已生成的静态文件"><a href="#hexo-clean-——-清除缓存文件-和已生成的静态文件" class="headerlink" title="==hexo clean==——-清除缓存文件  和已生成的静态文件"></a>==hexo clean==——-清除缓存文件  和已生成的静态文件</h3><h3 id="hexo-g-——-生成静态文件"><a href="#hexo-g-——-生成静态文件" class="headerlink" title="==hexo g==——-生成静态文件"></a>==hexo g==——-生成静态文件</h3><h3 id="hexo-d-——-部署网站"><a href="#hexo-d-——-部署网站" class="headerlink" title="==hexo d==——-部署网站"></a>==hexo d==——-部署网站</h3><p>报错：YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 4, column 1:</p><p>一般是文件头部忘记加空格添加标签的时候一定要换行，加 - 然后空一格写标签。如图：</p><figure class="image-box">                <img src="http://chen.cypeng.cn/20200305.png" alt="如图" title="" class="">                <p>如图</p>            </figure><p>或者不换行，不加-，然后直接空格。如图</p><figure class="image-box">                <img src="http://chen.cypeng.cn/202003052.png" alt="" title="" class="">                <p></p>            </figure>]]></content>
      
      
      
        <tags>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>SSM整合搭建</title>
      <link href="/2019/01/08/SSM%E6%95%B4%E5%90%88%E6%90%AD%E5%BB%BA/"/>
      <url>/2019/01/08/SSM%E6%95%B4%E5%90%88%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="SSM-依赖于maven-本文参考的项目-更完善的项目"><a href="#SSM-依赖于maven-本文参考的项目-更完善的项目" class="headerlink" title="SSM(依赖于maven)   本文参考的项目     更完善的项目"></a>SSM(依赖于maven)   <a href="http://chen.cypeng.cn/SSM20190107.zip" target="_blank" rel="noopener">本文参考的项目</a>     <a href="http://chen.cypeng.cn/dachuang.zip" target="_blank" rel="noopener">更完善的项目</a></h1><h2 id="spring部分配置"><a href="#spring部分配置" class="headerlink" title="spring部分配置"></a>spring部分配置</h2><h4 id="1-先在web-xml文件中配置"><a href="#1-先在web-xml文件中配置" class="headerlink" title="1.先在web.xml文件中配置"></a>1.先在web.xml文件中配置</h4><p><a href="http://chen.cypeng.cn/SSM_web.xml" target="_blank" rel="noopener">web.xml文件内容链接</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee </span></span></span><br><span class="line"><span class="tag"><span class="string">http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>SSM20190107<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 实例化appliccontext容器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 加载src目录下的applicationcontext.xml文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定以ContextLoaderListener方式启动spring容器--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 部署DispatcherServlet控制器，寻找映射--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!--&lt;servlet-name&gt;中的值即springmvc配置文件的命名，即servletname-servlet.xml,所以本文件命名springmvc-servlet.xml --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">org.springframework.web.servlet.DispatcherServlet</span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--&lt;servlet-name&gt;中的值即springmvc配置文件的命名，即servletname-servlet.xml,所以本文件命名springmvc-servlet.xml --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- “/”表示DispatcherServlet控制器过滤所以文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 字符编码过滤器--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- “/*”表示字符编码控制器过滤所以文件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>指定加载applicationContext.xml的路径和listener监听</strong></p><h4 id="1-在src-main-resources建立applicationContest-xml文件"><a href="#1-在src-main-resources建立applicationContest-xml文件" class="headerlink" title="1.在src/main/resources建立applicationContest.xml文件"></a>1.在src/main/resources建立applicationContest.xml文件</h4><p><a href="http://chen.cypeng.cn/SSM_applicationContext.xml" target="_blank" rel="noopener">文件内容链接</a></p><h5 id="1-2文件内容分析-不要直接复制，存在字符编码问题可能会不可用，从链接中打开访问"><a href="#1-2文件内容分析-不要直接复制，存在字符编码问题可能会不可用，从链接中打开访问" class="headerlink" title="1.2文件内容分析(不要直接复制，存在字符编码问题可能会不可用，从链接中打开访问)"></a>1.2文件内容分析(不要直接复制，存在字符编码问题可能会不可用，从链接中打开访问)</h5><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string"> http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string"> http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string"> http://www.springframework.org/schema/context/spring-context.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string"> http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string"> http://www.springframework.org/schema/tx/spring-tx.xsd "</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--classpath指的是jdbc.properties文件的路径，我把它放在了src/main/resources文件下，能通过$&#123;&#125;加文件内的命名取得属性值 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:property-placeholder</span> <span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span> /&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"org.apache.commons.dbcp2.BasicDataSource"</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;name&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxTotal"</span> <span class="attr">value</span>=<span class="string">"30"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"maxIdle"</span> <span class="attr">value</span>=<span class="string">"10"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"initialSize"</span> <span class="attr">value</span>=<span class="string">"5"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"txManager"</span> <span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"txManager"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- configLocation的属性值为mybatis的核心配置文件位置，同样也在src/main/resource --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span> <span class="attr">value</span>=<span class="string">"classpath:mybatis-config.xml"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- mybatis-spring组件的扫描器，扫描DAO层中添加@Mapper注释的java文件使注释生效，我的dao层文件都放在src/main/java下的dao包中，所以basepackage的值是dao --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"dao"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 指定需要扫描的包(包括子包),使注解生效，dao包在mybatis-spring组件中已经扫描，这里不需要再扫描 controller在springMVC的配置文件spring-servlet.xml文件中已经扫描过了service层也放在service包中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"service"</span> /&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>放在src/main/java和src/main/resources的文件在classes文件下，在同一个文件层</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM3.png" alt="" title="" class="">                <p></p>            </figure><p><strong>各个文件放置位置</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM1.png" alt="" title="" class="">                <p></p>            </figure><p><strong>jdbc.properties的内容</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM2.png" alt="" title="" class="">                <p></p>            </figure><h2 id="springMVC部分"><a href="#springMVC部分" class="headerlink" title="springMVC部分"></a>springMVC部分</h2><h4 id="1-核心配置文件springmvc-servlet-xml-文件命名和web-xml的DispatcherServlet部分有关"><a href="#1-核心配置文件springmvc-servlet-xml-文件命名和web-xml的DispatcherServlet部分有关" class="headerlink" title="1.核心配置文件springmvc-servlet.xml(文件命名和web.xml的DispatcherServlet部分有关)"></a>1.核心配置文件springmvc-servlet.xml(文件命名和web.xml的DispatcherServlet部分有关)</h4><h5 id="1-1在web-xml中配置"><a href="#1-1在web-xml中配置" class="headerlink" title="1.1在web.xml中配置"></a>1.1在web.xml中配置</h5><p><a href="http://chen.cypeng.cn/SSM_web.xml" target="_blank" rel="noopener">web.xml文件内容链接</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee </span></span></span><br><span class="line"><span class="tag"><span class="string">http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>SSM20190107<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 实例化appliccontext容器 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- 加载src目录下的applicationcontext.xml文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 部署DispatcherServlet控制器，寻找映射--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">             <span class="comment">&lt;!--&lt;servlet-name&gt;中的值即springmvc配置文件的命名，即servletname-servlet.xml,所以本文件命名springmvc-servlet.xml --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">org.springframework.web.servlet.DispatcherServlet</span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--&lt;servlet-name&gt;中的值即springmvc配置文件的命名，即servletname-servlet.xml,所以本文件命名springmvc-servlet.xml --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- “/”表示DispatcherServlet控制器过滤所以文件 --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 字符编码过滤器--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">param-name</span>&gt;</span>forceEncoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>characterEncodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">           <span class="comment">&lt;!-- “/*”表示字符编码控制器过滤所以文件 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>在web.xml文件中加上DispatcherServlet控制器和字符过滤器，控制器不会过滤掉.jsp和.html等默认文件</strong></p><h5 id="1-2在web-xml同级下建立springmvc-servlet-xml文件，即WEB-INF下"><a href="#1-2在web-xml同级下建立springmvc-servlet-xml文件，即WEB-INF下" class="headerlink" title="1.2在web.xml同级下建立springmvc-servlet.xml文件，即WEB-INF下"></a>1.2在web.xml同级下建立springmvc-servlet.xml文件，即WEB-INF下</h5><p><a href="http://chen.cypeng.cn/SSM_springmvc-servlet.xml" target="_blank" rel="noopener">springmvc-servlet.xml文件的链接</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> </span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string"> http://www.springframework.org/schema/beans/spring-beans.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string"> http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">  http://www.springframework.org/schema/context/spring-context.xsd "</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 扫描controller层--&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"controller"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 视图解析器，为controller层转发的页面添加前缀和后缀 ，若使用request和forward只在控制器转发不转发页面--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"internalResourceViewResolver"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"viewClass"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">value</span>=<span class="string">"org.springframework.web.servlet.view.JstlView"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"> <span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>springmvc-servlet.xml的位置</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM4.png" alt="" title="" class="">                <p></p>            </figure><p><strong>在controller层类前写@Controler,每个方法前要写注释，例如@RequestMapping(“/login”)</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM5.png" alt="" title="" class="">                <p></p>            </figure><h1 id="mybatis部分"><a href="#mybatis部分" class="headerlink" title="mybatis部分"></a>mybatis部分</h1><h4 id="1-和spring的配置文件applicationContext-xml之间有联系，请查看applicationContext-xml文件"><a href="#1-和spring的配置文件applicationContext-xml之间有联系，请查看applicationContext-xml文件" class="headerlink" title="1.和spring的配置文件applicationContext.xml之间有联系，请查看applicationContext.xml文件"></a>1.和spring的配置文件applicationContext.xml之间有联系，请查看applicationContext.xml文件</h4><h4 id="2-核心配置文件mybatis-config-xml"><a href="#2-核心配置文件mybatis-config-xml" class="headerlink" title="2.核心配置文件mybatis-config.xml"></a>2.核心配置文件mybatis-config.xml</h4><p><a href="http://chen.cypeng.cn/SSM_mybatis-config.xml" target="_blank" rel="noopener">mybatis-config.xml文件链接</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" </span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--  </span></span><br><span class="line"><span class="comment">&lt;!--定义类的别名 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">"BOOK.teacher"</span> <span class="attr">alias</span>=<span class="string">"tea"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span> --&gt;</span><br><span class="line">    <span class="comment">&lt;!-- 指定mybatis映射文件的路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"/mybatismapper.xml"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-映射文件-例如UserMapper-xml"><a href="#3-映射文件-例如UserMapper-xml" class="headerlink" title="3.映射文件 例如UserMapper.xml"></a>3.映射文件 例如UserMapper.xml</h4><p><a href="http://chen.cypeng.cn/SSM_mybatismapper.xml" target="_blank" rel="noopener">映射文件</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" </span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- namespace指的是dao层@Mapper注释的的类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span>  <span class="attr">namespace</span>=<span class="string">"dao.UserDao"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"login"</span> <span class="attr">resultType</span>=<span class="string">"test.TestUser"</span>&gt;</span></span><br><span class="line">   select * from user1 where username=#&#123;arg0&#125; and password=#&#123;arg1&#125;;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">"insertUser"</span> <span class="attr">parameterType</span>=<span class="string">"test.UserData"</span>&gt;</span></span><br><span class="line">   insert into user1 values(#&#123;name&#125;,#&#123;password&#125;);</span><br><span class="line">   <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser"</span> <span class="attr">parameterType</span>=<span class="string">"test.UserData"</span>&gt;</span></span><br><span class="line">   update user1 set password=#&#123;password&#125; where username=#&#123;name&#125;;</span><br><span class="line">   <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>1.111 标签里有parameterType属性和resultType，parameter：可省略。当只有一个值的时候，直接写值的类型String，Integer；当是一个实体类的时候，写出类的路径；当有多个值不相干的值的时候，可以省略。resultType：返回一个值写值的类型，返回一个对象User，写类的路径，返回一个集合List也写类路径</strong></p><p><strong>1.112mybatis里parameterType属性可以省略        当多个参数无法指定，省略parameterType，参数用arg0，arg1代替(mybatis版本较低的话可能是0和1)</strong></p><p><strong>1.222dao层接口类要写@Repository和@Mapper，@Mapper可以使接口装配为Mybatis的映射接口，对应方法映射为xml里的id</strong></p><h2 id="4-整个项目"><a href="#4-整个项目" class="headerlink" title="4.整个项目"></a>4.整个项目</h2><p><strong>1.项目文件结构</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM6.png" alt="" title="" class="">                <p></p>            </figure><p><strong>2.controller层</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM7.png" alt="" title="" class="">                <p></p>            </figure><p>@Controller 标注为控制层 </p><p>@Autowired调用其他层内属性、方法标注，表示按类型装配；一般在private service servicename 前，即引用其他类前</p><p>@RequestMapping路径</p><p><strong>3.dao层或者写mapp层</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM8.png" alt="" title="" class="">                <p></p>            </figure><p>@Repository标注dao层  @Mapper mapper接口映射文件</p><p><strong>4.service层</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM9.png" alt="" title="" class="">                <p></p>            </figure><p>service接口，不用注解，其中的方法和dao接口内的方法功能一样</p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM10.png" alt="" title="" class="">                <p></p>            </figure><p>serviceimpl类,@Service标注为service层，@Transactional注解指定这个类受spring的事物管理。它只能针对public属性范围内的方法添加。</p><p>@Autowired在声明其他类的每个属性前</p><p><strong>5.test层，其实应该写pojo层，表示java bean实体类</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM11.png" alt="" title="" class="">                <p></p>            </figure><p>在eclipse里写完属性后直接shift+alt+s快捷键生成setter和getter方法</p><p><strong>6.mybatis日志文件 log4j.properties</strong></p><p><a href="http://chen.cypeng.cn/SSM_log4j.properties" target="_blank" rel="noopener">log4j.properties文件</a></p><p>引入对应jar包后，直接建立该文件，即可</p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM12.png" alt="" title="" class="">                <p></p>            </figure><p><strong>7.所需要的全部jar包</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/SSM13.png" alt="" title="" class="">                <p></p>            </figure><p><strong>8.<u>命名规范</u></strong></p><p>接口和类：首字母大写，若由两个单词组建，则第二个单词首字母也大写，三个单词也是每个单词首字母大写；</p><p>属性和方法：都是首字母小写，若还有其他单词，则其他单词首字母大写</p><p>注意注解，例如@Service，其实它是由@Service(“testService”)简写而成，在实现类TestServiceImpl中注解@Service其实是@Service(“testService”)，只写@Service默认为首字母小写的类名。所以命名尽量规范，两个单词首字母都大写</p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java web </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>maven入门教程</title>
      <link href="/2018/10/06/maven%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2018/10/06/maven%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="maven管理java-web项目"><a href="#maven管理java-web项目" class="headerlink" title="maven管理java web项目"></a>maven管理java web项目</h1><h2 id="maven介绍"><a href="#maven介绍" class="headerlink" title="maven介绍"></a>maven介绍</h2><h2 id="maven安装"><a href="#maven安装" class="headerlink" title="maven安装"></a>maven安装</h2><h5 id="maven官网下载"><a href="#maven官网下载" class="headerlink" title="maven官网下载"></a><a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">maven官网下载</a></h5><figure class="image-box">                <img src="http://chen.cypeng.cn/maven1.jpg" alt="" title="" class="">                <p></p>            </figure><p>1.解压，然后配置环境变量</p><p>2.右键我的电脑》属性》高级系统设置》环境变量</p><p>3.新建环境变量MAVEN_HOME，选择解压路径</p><figure class="image-box">                <img src="http://chen.cypeng.cn/maven2.png" alt="" title="" class="">                <p></p>            </figure><p>编辑环境变量path，追加%MAVEN_HOME%\bin\;</p><figure class="image-box">                <img src="http://chen.cypeng.cn/maven3.png" alt="" title="" class="">                <p></p>            </figure><p>4.检测是否安装成功</p><p><code>mvn -v</code>，cmd下输入语句检测是否安装成功</p><figure class="image-box">                <img src="http://chen.cypeng.cn/maven4.png" alt="" title="" class="">                <p></p>            </figure><h2 id="配置maven仓库"><a href="#配置maven仓库" class="headerlink" title="配置maven仓库"></a>配置maven仓库</h2><p>1.本地仓库</p><p>打开解压文件下conf文件夹下的settings.xml文件，找到localrepository，在下面用 <code>&lt;localRepository&gt;</code>便签标明自己的本地仓库路径(自己新建一个用于存放数据的新文件夹)</p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven5.png" alt="" title="" class="">                <p></p>            </figure><p>2.远程仓库</p><p>在settings.xml文件里找到 <code>&lt;mirrors&gt;</code>标签，在里面添加阿里云maven远程地址</p><p><code>&lt;mirror&gt; ​      &lt;id&gt;nexus-aliyun&lt;/id&gt;​      &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;​      &lt;name&gt;Nexus aliyun&lt;/name&gt;​      &lt;url&gt; http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt; ​         &lt;/mirror&gt;</code></p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven7.png" alt="" title="" class="">                <p></p>            </figure><h2 id="maven在eclipse里的使用"><a href="#maven在eclipse里的使用" class="headerlink" title="maven在eclipse里的使用"></a>maven在eclipse里的使用</h2><p>1.在eclipse窗口选定weindow&gt;preferences&gt;maven&gt;installation，勾选maven，apply。再选择user settings，选择setting文件的路径，在下方同样选定本地仓库的位置</p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven8.png" alt="" title="" class="">                <p></p>            </figure><p>2.点击左上角file选择新建maven项目，新建项目完成</p><p>3.<figure class="image-box">                <img src="http://chen.cypeng.cn//maven9.png" alt="" title="" class="">                <p></p>            </figure></p><p>webapp  指网站类型</p><p>4.项目新建完成后会出现错误</p><figure class="image-box">                <img src="http://chen.cypeng.cn/maven10.png" alt="" title="" class="">                <p></p>            </figure><p>这种情况指的是未配置tomcat环境，右键项目选择build path，你会发现没有Tomcat，点击add library，选择server Runtime，选中tomcat，添加</p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven11.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="http://chen.cypeng.cn/maven12.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="http://chen.cypeng.cn//maven13.png" alt="" title="" class="">                <p></p>            </figure><p>在上图你会看到jre的版本是1.5，这是maven默认的版本，而其实我们的jre并不是这个版本(像我的是1.8)，我们需要更改jre版本，在pom.xml里面的 <code>&lt;build&gt;</code>标签里加入如下代码 ，不要粘贴复制，会有编码不一致导致error</p><p><code>&lt;plugins&gt;​            &lt;!-- 修改maven默认的JRE编译版本，1.8代表JRE编译的版本，根据自己的安装版本选择1.7或1.8 --&gt;​            &lt;plugin&gt;​                &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;​                &lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;​                &lt;configuration&gt;​                    &lt;source&gt;1.8&lt;/source&gt;​                    &lt;target&gt;1.8&lt;/target&gt;​                &lt;/configuration&gt;​            &lt;/plugin&gt;​        &lt;/plugins&gt;</code></p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven14.png" alt="" title="" class="">                <p></p>            </figure><p>右键项目，点击最底下的properties，在project faces里更换java版本，然后应用，然后update maven。你可能会疑问为什么不直接修改版本，你会发现，如果你直接修改版本或者在build path里修改jre库,添加你自己库的路径，你会发现这时候虽然能修改版本，当你update maven时，版本号依然会回到1.5。</p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven15.png" alt="" title="" class="">                <p></p>            </figure><p><img src="" alt="1111"></p><p>在修改java版本的时候，第一张图，你会发现，Dynamic web Module的版本很低（默认2.3），我们也需要修改这个版本。首先将webapp下的web.xml删除，也要先将index.jsp删除</p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven16.png" alt="" title="" class="">                <p></p>            </figure><p>在project facets页面，一定先修改版本号选到合适的版本，例如4.0，然后取消勾√，点击apply应用，然后打上勾√，这时候下方出现一个超链接</p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven17.png" alt="" title="" class="">                <p></p>            </figure><p>点击进入，勾选添加web.xml，选择路径，点击ok</p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven18.png" alt="" title="" class="">                <p></p>            </figure><p>5.补齐source floder</p><figure class="image-box">                <img src="http://chen.cypeng.cn//maven19.png" alt="" title="" class="">                <p></p>            </figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>1.<a href="https://www.cnblogs.com/eagle6688/p/7838224.html" target="_blank" rel="noopener">https://www.cnblogs.com/eagle6688/p/7838224.html</a></p><p>2.<a href="https://blog.csdn.net/qidasheng2012/article/details/78152581" target="_blank" rel="noopener">https://blog.csdn.net/qidasheng2012/article/details/78152581</a></p>]]></content>
      
      
      <categories>
          
          <category> 后端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java web </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo-theme-mellow博客主题的设置</title>
      <link href="/2018/10/03/hexo-theme-mellow%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AE%BE%E7%BD%AE/"/>
      <url>/2018/10/03/hexo-theme-mellow%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E7%9A%84%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-theme-mellow主题设置-陈越鹏"><a href="#hexo-theme-mellow主题设置-陈越鹏" class="headerlink" title="hexo-theme-mellow主题设置   陈越鹏"></a>hexo-theme-mellow主题设置   陈越鹏</h1><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone git@github.com:codefine/hexo-theme-mellow.git themes/mellow</span><br></pre></td></tr></table></figure><p>  themes/mellow 指的是将下载文件放到themes文件夹下，并且文件名为mellow</p><h2 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h2><p> 在hexo的文件夹下打开_config.yml，修改主题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme:  mellow</span><br></pre></td></tr></table></figure><p>此时主题已经激活</p><h2 id="修改自定义主题"><a href="#修改自定义主题" class="headerlink" title="修改自定义主题"></a>修改自定义主题</h2><h4 id="修改图片"><a href="#修改图片" class="headerlink" title="修改图片"></a>修改图片</h4><p>  <a href="https://source.unsplash.com/" target="_blank" rel="noopener"></a>这是一个随机图片的网址，你在背景图上使用，每次刷新都会更新背景。效果图如下</p><figure class="image-box">                <img src="http://chen.cypeng.cn/QQ%E5%9B%BE%E7%89%8720181003172825.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="http://chen.cypeng.cn/QQ%E5%9B%BE%E7%89%8720181003172850.png" alt="" title="" class="">                <p></p>            </figure><h4 id="整理标签、分档、分类等"><a href="#整理标签、分档、分类等" class="headerlink" title="整理标签、分档、分类等"></a>整理标签、分档、分类等</h4><p>先使用<code>hexo new page tags</code>会在hexo博客的source文件夹下生成一个tags文件，与博客文章文件夹同在source下。</p><figure class="image-box">                <img src="http://chen.cypeng.cn/mellow%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%983.png" alt="" title="" class="">                <p></p>            </figure><p>并使用Typora或者其他编译器打开tags文件下index.md文件</p><figure class="image-box">                <img src="http://chen.cypeng.cn/mellow%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE4.png" alt="" title="" class="">                <p></p>            </figure><p>加入layout: tags,保存，<code>hexo c`</code>hexo g<code></code>hexo d`</p><p>一定注意layout后面的<strong>“:”</strong>   不能写错或者<code>layout: tags</code>不写，如果这样做的话，tags页面能打开，但是不显示所有的标签。</p><p>  <strong>categories、archives同理可设</strong></p><h4 id="怎么写标签和分档博客"><a href="#怎么写标签和分档博客" class="headerlink" title="怎么写标签和分档博客"></a>怎么写标签和分档博客</h4><p><code>hexo new &#39;###&#39;</code>新建一篇博客，然后用Typora打开编辑，layout、title、date是初始就存在的，我们需要tags就添加tags，注意换行和’-‘符号要有空格</p><figure class="image-box">                <img src="http://chen.cypeng.cn/mellow%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%985.png" alt="" title="" class="">                <p></p>            </figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://blog.csdn.net/ganzhilin520/article/details/79047249" target="_blank" rel="noopener">csdn官网参考设置tag页面</a></p><p><a href="https://github.com/codefine/hexo-theme-mellow/wiki/2.-%E4%B8%BB%E9%A2%98%E5%B8%B8%E8%A7%84%E9%85%8D%E7%BD%AE" target="_blank" rel="noopener">github官方文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> theme </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>IMAPOST</title>
      <link href="/2018/10/03/IMAPOST/"/>
      <url>/2018/10/03/IMAPOST/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    <entry>
      <title>justify-content和overflow的使用</title>
      <link href="/2018/09/17/justify-content%E5%92%8Coverflow%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/09/17/justify-content%E5%92%8Coverflow%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="flex的体会总会"><a href="#flex的体会总会" class="headerlink" title="flex的体会总会"></a><strong>flex的体会总会</strong></h1><h2 id="学习资料"><a href="#学习资料" class="headerlink" title="学习资料"></a><strong>学习资料</strong></h2><p><a href="http://www.runoob.com/w3cnote/flex-grammar.html" target="_blank" rel="noopener">菜鸟教程相关知识</a></p><h3 id="自我体会总结"><a href="#自我体会总结" class="headerlink" title="自我体会总结"></a><strong>自我体会总结</strong></h3><h5 id="space-between和space-around"><a href="#space-between和space-around" class="headerlink" title="space-between和space-around"></a><strong>space-between和space-around</strong></h5><p>​     space-between指子元素之间的距离一致，首和尾两个子元素顶格与父元素临近；space-around指每个子元素两侧间隔相等，每个子元素周围都有间隔。</p><p>​     <strong>space-around</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:coral;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightblue;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:khaki;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:pink;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c3c3c3</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>效果图</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/flex%20space-around.png" alt="space-around" title="" class="">                <p>space-around</p>            </figure><p><strong>space-around</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#c3c3c3</span>;</span><br><span class="line">   </span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#main</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">70px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:coral;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:lightblue;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:khaki;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"background-color:pink;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图</p><figure class="image-box">                <img src="http://chen.cypeng.cn/flex%20space-between.png" alt="" title="" class="">                <p></p>            </figure><h3 id="使用justify-content时遇到的问题"><a href="#使用justify-content时遇到的问题" class="headerlink" title="使用justify-content时遇到的问题"></a>使用justify-content时遇到的问题</h3><h4 id="overflow"><a href="#overflow" class="headerlink" title="overflow"></a>overflow</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'rightdata'</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">view</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'goods'</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">'goods-title'</span>&gt;</span>—— 彩虹粉1 ——<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">'goods-content'</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>ssss<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>dddd<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>cccc<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>ffff<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>ffff<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>ffff<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>ffff<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>ffff<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>ffff<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>ffff<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>dddd<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>cccc<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>ffff<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>dddd<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">label</span>&gt;</span>cccc<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.rightdata</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">570</span>rpx;</span><br><span class="line"> <span class="attribute">height</span>:<span class="number">1080</span>rpx;</span><br><span class="line">  <span class="attribute">overflow</span>: auto;</span><br><span class="line">  <span class="attribute">padding-top</span>:<span class="number">1px</span>;</span><br><span class="line">   <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="selector-class">.goods</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-direction</span>: column;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">565</span>rpx;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line"> <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​     </p><p>​    我们在.goods里加入margin-top：30rpx==就又会出现这两种情况</p><p><strong>space-between</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/space-between.png" alt="" title="" class="">                <p></p>            </figure><p><strong>space-around</strong></p><figure class="image-box">                <img src="http://chen.cypeng.cn/space-around.png" alt="" title="" class="">                <p></p>            </figure><p>space-around会出现遮挡，我认为是space-around会让每个子元素两侧间隔一致，所以间隔为负，目前暂未找到类似的资料，暂且这样理解。涉及到类似的情况烦请使用space-between。</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>微信小程序使用多色图标</title>
      <link href="/2018/07/02/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8svg/"/>
      <url>/2018/07/02/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8svg/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序使用多色图标"><a href="#微信小程序使用多色图标" class="headerlink" title="微信小程序使用多色图标"></a>微信小程序使用多色图标</h1><h2 id="引用阿里图标库iconfont"><a href="#引用阿里图标库iconfont" class="headerlink" title="引用阿里图标库iconfont"></a>引用阿里图标库iconfont</h2><h5 id="阿里图标库"><a href="#阿里图标库" class="headerlink" title="阿里图标库"></a><a href="http://www.iconfont.cn/" target="_blank" rel="noopener">阿里图标库</a></h5><p>在写html网页时常常会使用阿里图标，通常有三种引入方式：Unicode、fontclass、symbol，其中Unicode和font class引入的为单色图标，即灰色，不过我们可以通过改变color属性改变图标颜色。而symbol则是通过引用js文件，使用<code>&lt;svg&gt;</code>标签引入多色图标，对于微信小程序来说，不识别<code>&lt;svg&gt;</code>标签。所以我们可以通过引用图片的形式来使用多色图标</p><h3 id="svg"><a href="#svg" class="headerlink" title="svg"></a>svg</h3><p>指矢量型图形，放大缩小不会改变图片的清晰度。</p><h4 id="base64"><a href="#base64" class="headerlink" title="base64"></a>base64</h4><p>网络上最常见的用于传输8bit字节代码的编码方式之一</p><h4 id="微信小程序的编码格式"><a href="#微信小程序的编码格式" class="headerlink" title="微信小程序的编码格式"></a>微信小程序的编码格式</h4><p>微信小程序不能使用svg代码，必须先转换成base64格式，再通过CSS调整。</p><h4 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h4><p>在阿里图标库挑选好自己喜欢的图标，下载成svg格式</p><p><a href="https://www.sojson.com/image2base64.html" target="_blank" rel="noopener">图片转base64格式网站</a></p><p>通过网站转换成base64代码，然后复制，定义css</p><p>如</p><figure class="image-box">                <img src="http://chen.cypeng.cn/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Ficon1.png" alt="" title="" class="">                <p></p>            </figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon1</span>&#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">url</span>();</span><br><span class="line">  <span class="attribute">background-size</span>: cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将复制的base64代码放在url()中，然后定义图标样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.icon</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-block;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">70</span>rpx;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">80</span>rpx;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>display一定要有，不然不显示。</p><figure class="image-box">                <img src="http://chen.cypeng.cn/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8Ficon2.jpg" alt="" title="" class="">                <p></p>            </figure><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p><a href="https://blog.csdn.net/rolan1993/article/details/79863422" target="_blank" rel="noopener">https://blog.csdn.net/rolan1993/article/details/79863422</a></p><p><a href="https://blog.csdn.net/AngelLover2017/article/details/81408591" target="_blank" rel="noopener">https://blog.csdn.net/AngelLover2017/article/details/81408591</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信小程序 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/07/01/hello-world/"/>
      <url>/2018/07/01/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
  
  
</search>
